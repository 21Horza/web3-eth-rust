{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5","program":"/Users/iliashuianov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","mio","--edition=2018","/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=e24dc51e501a7c2e","-C","extra-filename=-e24dc51e501a7c2e","--out-dir","/Users/iliashuianov/projects/rust_projects/web3-rust-eth/target/rls/debug/deps","-L","dependency=/Users/iliashuianov/projects/rust_projects/web3-rust-eth/target/rls/debug/deps","--extern","libc=/Users/iliashuianov/projects/rust_projects/web3-rust-eth/target/rls/debug/deps/liblibc-842b9989dced1684.rmeta","--extern","log=/Users/iliashuianov/projects/rust_projects/web3-rust-eth/target/rls/debug/deps/liblog-da7e10a6c641ed0e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/iliashuianov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/iliashuianov/projects/rust_projects/web3-rust-eth/target/rls/debug/deps/libmio-e24dc51e501a7c2e.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[636709042319493053,0]},"crate_root":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src","external_crates":[{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","num":20,"id":{"name":"log","disambiguator":[5796326367426726224,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","num":21,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","num":22,"id":{"name":"libc","disambiguator":[88382757799706785,0]}}],"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/mod.rs","byte_start":14165125,"byte_end":14165133,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/mod.rs","byte_start":14165125,"byte_end":14165133,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/mod.rs","byte_start":14211426,"byte_end":14211436,"line_start":2,"line_end":2,"column_start":27,"column_end":37},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":655}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/mod.rs","byte_start":14165335,"byte_end":14165345,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":283}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/mod.rs","byte_start":47224,"byte_end":47225,"line_start":57,"line_end":57,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Waker, uds, IoSourceState, tcp, event, Event, pipe, SocketAddr, Events, Selector, SourceFd, udp","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":55903,"byte_end":55908,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":55933,"byte_end":55939,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":55941,"byte_end":55945,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":55970,"byte_end":55976,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/mod.rs","byte_start":14256025,"byte_end":14256036,"line_start":2,"line_end":2,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1125}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/mod.rs","byte_start":14256073,"byte_end":14256082,"line_start":5,"line_end":5,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1125}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255748,"byte_end":14255759,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255761,"byte_end":14255770,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255866,"byte_end":14255875,"line_start":34,"line_end":34,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/mod.rs","byte_start":14301908,"byte_end":14301920,"line_start":2,"line_end":2,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1455}},{"kind":"Use","ref_id":{"krate":0,"index":1601},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/mod.rs","byte_start":14301961,"byte_end":14301973,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1455}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/mod.rs","byte_start":14302010,"byte_end":14302020,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1455}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/mod.rs","byte_start":14302043,"byte_end":14302053,"line_start":10,"line_end":10,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1455}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255933,"byte_end":14255943,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255945,"byte_end":14255957,"line_start":39,"line_end":39,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1601},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255959,"byte_end":14255971,"line_start":39,"line_end":39,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255973,"byte_end":14255983,"line_start":39,"line_end":39,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1465,"byte_end":1471,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1491,"byte_end":1499,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1516,"byte_end":1520,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1522,"byte_end":1530,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1602,"byte_end":1607,"line_start":70,"line_end":70,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1901,"byte_end":1904,"line_start":82,"line_end":82,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1906,"byte_end":1914,"line_start":82,"line_end":82,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1916,"byte_end":1922,"line_start":82,"line_end":82,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":246}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":42},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":127},{"krate":0,"index":1044},{"krate":0,"index":1124},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunused_imports, dead_code)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11952,"byte_end":11960,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11313,"byte_end":11346,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11347,"byte_end":11350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11351,"byte_end":11428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11429,"byte_end":11508,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11509,"byte_end":11585,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11586,"byte_end":11637,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11638,"byte_end":11641,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11642,"byte_end":11697,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11698,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11747,"byte_end":11777,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11778,"byte_end":11842,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":11843,"byte_end":11885,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12489,"byte_end":12497,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12413,"byte_end":12474,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12648,"byte_end":12656,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12572,"byte_end":12633,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12955,"byte_end":12958,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"AIO","qualname":"::interest::Interest::AIO","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing AIO completion interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing AIO completion interests.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12731,"byte_end":12798,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\ntarget_os = \"macos\"))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12803,"byte_end":12940,"line_start":44,"line_end":49,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13668,"byte_end":13671,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13217,"byte_end":13249,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13254,"byte_end":13257,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13262,"byte_end":13330,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13335,"byte_end":13357,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13362,"byte_end":13365,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13370,"byte_end":13377,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13382,"byte_end":13404,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13409,"byte_end":13412,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13417,"byte_end":13492,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13497,"byte_end":13547,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13552,"byte_end":13593,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13598,"byte_end":13605,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13610,"byte_end":13650,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14602,"byte_end":14608,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13804,"byte_end":13847,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13852,"byte_end":13855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13860,"byte_end":13928,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13933,"byte_end":13936,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13941,"byte_end":13948,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13953,"byte_end":13975,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13980,"byte_end":13983,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":13988,"byte_end":14066,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14071,"byte_end":14074,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14079,"byte_end":14140,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14145,"byte_end":14215,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14220,"byte_end":14259,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14264,"byte_end":14302,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14307,"byte_end":14310,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14315,"byte_end":14377,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14382,"byte_end":14442,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14447,"byte_end":14450,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14455,"byte_end":14517,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14522,"byte_end":14578,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14583,"byte_end":14590,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14809,"byte_end":14820,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14733,"byte_end":14791,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14963,"byte_end":14974,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":14887,"byte_end":14945,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15112,"byte_end":15118,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15041,"byte_end":15094,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15251,"byte_end":15257,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15180,"byte_end":15233,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15394,"byte_end":15399,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"bitor","qualname":"<Interest as std::ops::BitOr>::bitor","value":"fn bitor(Self, Self) -> Self","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15377,"byte_end":15386,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15520,"byte_end":15532,"line_start":129,"line_end":129,"column_start":8,"column_end":20},"name":"bitor_assign","qualname":"<Interest as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign(&mut Self, Self)","parent":{"krate":2,"index":3337},"children":[],"decl_id":{"krate":2,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15503,"byte_end":15512,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15642,"byte_end":15645,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Interest as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27712,"byte_end":27716,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":16956,"byte_end":17012,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17013,"byte_end":17016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17017,"byte_end":17093,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17094,"byte_end":17173,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17174,"byte_end":17252,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17253,"byte_end":17323,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17324,"byte_end":17338,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17339,"byte_end":17342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17343,"byte_end":17421,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17422,"byte_end":17494,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17495,"byte_end":17570,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17571,"byte_end":17647,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17648,"byte_end":17725,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17726,"byte_end":17800,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17801,"byte_end":17843,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17844,"byte_end":17847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17848,"byte_end":17896,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17897,"byte_end":17950,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":17951,"byte_end":18006,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18007,"byte_end":18061,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18062,"byte_end":18065,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18066,"byte_end":18080,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18081,"byte_end":18084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18085,"byte_end":18146,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18147,"byte_end":18150,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18298,"byte_end":18326,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18327,"byte_end":18374,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18375,"byte_end":18420,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18421,"byte_end":18449,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18450,"byte_end":18453,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18454,"byte_end":18491,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18492,"byte_end":18495,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18496,"byte_end":18538,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18539,"byte_end":18589,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18590,"byte_end":18637,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18638,"byte_end":18641,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18642,"byte_end":18719,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18720,"byte_end":18752,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18753,"byte_end":18802,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18803,"byte_end":18806,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18807,"byte_end":18832,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18833,"byte_end":18896,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18897,"byte_end":18900,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18901,"byte_end":18939,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":18940,"byte_end":19034,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19035,"byte_end":19038,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19039,"byte_end":19115,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19116,"byte_end":19147,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19148,"byte_end":19158,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19159,"byte_end":19197,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19198,"byte_end":19201,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19202,"byte_end":19232,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19233,"byte_end":19298,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19299,"byte_end":19378,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19379,"byte_end":19405,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19406,"byte_end":19436,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19437,"byte_end":19450,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19451,"byte_end":19460,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19461,"byte_end":19466,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19467,"byte_end":19474,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19475,"byte_end":19482,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19483,"byte_end":19486,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19487,"byte_end":19504,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19505,"byte_end":19508,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19509,"byte_end":19585,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19586,"byte_end":19648,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19649,"byte_end":19652,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19653,"byte_end":19676,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19677,"byte_end":19680,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19681,"byte_end":19750,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19751,"byte_end":19820,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19821,"byte_end":19899,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19900,"byte_end":19974,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":19975,"byte_end":20010,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20011,"byte_end":20014,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20015,"byte_end":20091,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20092,"byte_end":20170,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20171,"byte_end":20184,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20185,"byte_end":20188,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20189,"byte_end":20215,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20216,"byte_end":20219,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20220,"byte_end":20295,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20296,"byte_end":20374,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20375,"byte_end":20453,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20454,"byte_end":20507,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20508,"byte_end":20511,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20512,"byte_end":20562,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20563,"byte_end":20566,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20567,"byte_end":20595,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20596,"byte_end":20599,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20600,"byte_end":20674,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20675,"byte_end":20753,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20754,"byte_end":20826,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20827,"byte_end":20901,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20902,"byte_end":20979,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":20980,"byte_end":21051,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21052,"byte_end":21123,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21124,"byte_end":21202,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21203,"byte_end":21277,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21278,"byte_end":21311,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21312,"byte_end":21315,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21316,"byte_end":21396,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21397,"byte_end":21466,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21467,"byte_end":21544,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21545,"byte_end":21591,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21592,"byte_end":21595,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21596,"byte_end":21658,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21659,"byte_end":21721,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21722,"byte_end":21778,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21779,"byte_end":21847,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21848,"byte_end":21918,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21919,"byte_end":21922,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21923,"byte_end":21950,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21951,"byte_end":21954,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":21955,"byte_end":22027,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22028,"byte_end":22105,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22106,"byte_end":22117,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22118,"byte_end":22121,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22122,"byte_end":22138,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22139,"byte_end":22142,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22290,"byte_end":22318,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22319,"byte_end":22338,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22339,"byte_end":22386,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22387,"byte_end":22424,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22425,"byte_end":22453,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22454,"byte_end":22483,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22484,"byte_end":22512,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22513,"byte_end":22533,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22534,"byte_end":22537,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22538,"byte_end":22591,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22592,"byte_end":22644,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22645,"byte_end":22708,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22709,"byte_end":22712,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22713,"byte_end":22755,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22756,"byte_end":22759,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22760,"byte_end":22788,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22789,"byte_end":22792,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22793,"byte_end":22871,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22872,"byte_end":22889,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22890,"byte_end":22982,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":22983,"byte_end":22999,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23000,"byte_end":23007,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23008,"byte_end":23015,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23016,"byte_end":23019,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23020,"byte_end":23043,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23044,"byte_end":23047,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23048,"byte_end":23126,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23127,"byte_end":23206,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23207,"byte_end":23287,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23288,"byte_end":23365,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23366,"byte_end":23410,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23411,"byte_end":23414,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23415,"byte_end":23461,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23462,"byte_end":23465,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23466,"byte_end":23504,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23505,"byte_end":23508,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23509,"byte_end":23581,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23582,"byte_end":23660,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23661,"byte_end":23735,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23736,"byte_end":23812,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23813,"byte_end":23839,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23840,"byte_end":23843,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23844,"byte_end":23921,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":23922,"byte_end":24000,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24001,"byte_end":24081,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24082,"byte_end":24159,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24160,"byte_end":24225,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24226,"byte_end":24229,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24230,"byte_end":24279,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24280,"byte_end":24283,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24284,"byte_end":24359,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24360,"byte_end":24442,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24443,"byte_end":24522,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24523,"byte_end":24602,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24603,"byte_end":24675,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24676,"byte_end":24748,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24749,"byte_end":24803,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24804,"byte_end":24807,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ### Polling without registering event sources","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24808,"byte_end":24857,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24858,"byte_end":24861,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24862,"byte_end":24865,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24866,"byte_end":24941,"line_start":193,"line_end":193,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":24942,"byte_end":25013,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ considered a breaking change, don't depend on this, it's just here to inform","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25014,"byte_end":25094,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ the user. On platforms that use epoll, kqueue or IOCP (see implementation","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25095,"byte_end":25172,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ notes below) polling without previously registering [event sources] will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25173,"byte_end":25249,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ result in sleeping forever, only a process signal will be able to wake up","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25250,"byte_end":25327,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ the thread.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25328,"byte_end":25343,"line_start":199,"line_end":199,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25344,"byte_end":25347,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ On WASM/WASI this is different as it doesn't support process signals,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25348,"byte_end":25421,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/ furthermore the WASI specification doesn't specify a behaviour in this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25422,"byte_end":25496,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ situation, thus it's up to the implementation what to do here. As an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25497,"byte_end":25569,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/ example, the wasmtime runtime will return `EINVAL` in this situation, but","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25570,"byte_end":25647,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ different runtimes may return different results. If you have further","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25648,"byte_end":25720,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ insights or thoughts about this situation (and/or how Mio should handle it)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25721,"byte_end":25800,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ please add you comment to [pull request#1580].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25801,"byte_end":25851,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25852,"byte_end":25855,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [event sources]: crate::event::Source","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25856,"byte_end":25897,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ [pull request#1580]: https://github.com/tokio-rs/mio/pull/1580","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25898,"byte_end":25964,"line_start":210,"line_end":210,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25965,"byte_end":25968,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25969,"byte_end":25995,"line_start":212,"line_end":212,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":25996,"byte_end":25999,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26000,"byte_end":26070,"line_start":214,"line_end":214,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26071,"byte_end":26074,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26075,"byte_end":26108,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26109,"byte_end":26142,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26143,"byte_end":26176,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26177,"byte_end":26210,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26211,"byte_end":26244,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26245,"byte_end":26278,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26279,"byte_end":26312,"line_start":222,"line_end":222,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26313,"byte_end":26346,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26347,"byte_end":26380,"line_start":224,"line_end":224,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26381,"byte_end":26414,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26415,"byte_end":26448,"line_start":226,"line_end":226,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26449,"byte_end":26482,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26483,"byte_end":26486,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26487,"byte_end":26561,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26562,"byte_end":26637,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26638,"byte_end":26711,"line_start":231,"line_end":231,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26712,"byte_end":26792,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26793,"byte_end":26821,"line_start":233,"line_end":233,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26822,"byte_end":26825,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26826,"byte_end":26904,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26905,"byte_end":26984,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":26985,"byte_end":27065,"line_start":237,"line_end":237,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27066,"byte_end":27137,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27138,"byte_end":27218,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27219,"byte_end":27295,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27296,"byte_end":27307,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27308,"byte_end":27311,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27312,"byte_end":27375,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27376,"byte_end":27448,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27449,"byte_end":27535,"line_start":245,"line_end":245,"column_start":1,"column_end":87}},{"value":"/ [`signalfd`]: https://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27536,"byte_end":27607,"line_start":246,"line_end":246,"column_start":1,"column_end":72}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27608,"byte_end":27651,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27652,"byte_end":27700,"line_start":248,"line_end":248,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27786,"byte_end":27794,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27746,"byte_end":27774,"line_start":253,"line_end":253,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29591,"byte_end":29594,"line_start":300,"line_end":300,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[{"value":"cfg(feature = \"os-poll\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/macros.rs","byte_start":9773,"byte_end":9800,"line_start":10,"line_end":10,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29859,"byte_end":29867,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29759,"byte_end":29821,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29826,"byte_end":29847,"line_start":308,"line_end":308,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33994,"byte_end":33998,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29924,"byte_end":29953,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29958,"byte_end":29961,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":29966,"byte_end":30041,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30046,"byte_end":30121,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30126,"byte_end":30199,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30204,"byte_end":30280,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30285,"byte_end":30349,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30354,"byte_end":30357,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30362,"byte_end":30439,"line_start":321,"line_end":321,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30444,"byte_end":30519,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30524,"byte_end":30597,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30602,"byte_end":30642,"line_start":324,"line_end":324,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30647,"byte_end":30650,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30655,"byte_end":30728,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30733,"byte_end":30809,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30814,"byte_end":30887,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30892,"byte_end":30966,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":30971,"byte_end":31044,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31049,"byte_end":31083,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31088,"byte_end":31091,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31096,"byte_end":31162,"line_start":333,"line_end":333,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31167,"byte_end":31236,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31241,"byte_end":31300,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31305,"byte_end":31308,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31313,"byte_end":31386,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31391,"byte_end":31403,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31408,"byte_end":31411,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31416,"byte_end":31464,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31469,"byte_end":31535,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31540,"byte_end":31606,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31611,"byte_end":31641,"line_start":343,"line_end":343,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31646,"byte_end":31698,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31703,"byte_end":31706,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31711,"byte_end":31722,"line_start":346,"line_end":346,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31727,"byte_end":31730,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31735,"byte_end":31809,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31814,"byte_end":31886,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31891,"byte_end":31921,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31926,"byte_end":31929,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Currently if the `timeout` elapses without any readiness events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":31934,"byte_end":32001,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ triggering this will return `Ok(())`. However we're not guaranteeing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32006,"byte_end":32078,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ this behaviour as this depends on the OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32083,"byte_end":32128,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32133,"byte_end":32136,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32141,"byte_end":32155,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32160,"byte_end":32163,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32168,"byte_end":32229,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32234,"byte_end":32237,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32397,"byte_end":32425,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32430,"byte_end":32477,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32482,"byte_end":32527,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32532,"byte_end":32560,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32565,"byte_end":32568,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32573,"byte_end":32617,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32622,"byte_end":32642,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32647,"byte_end":32650,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32655,"byte_end":32697,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32702,"byte_end":32752,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32757,"byte_end":32799,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32804,"byte_end":32848,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32853,"byte_end":32856,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32861,"byte_end":32903,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32908,"byte_end":32935,"line_start":376,"line_end":376,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32940,"byte_end":32972,"line_start":377,"line_end":377,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32977,"byte_end":32984,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32989,"byte_end":32992,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":32997,"byte_end":33074,"line_start":380,"line_end":380,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33079,"byte_end":33111,"line_start":381,"line_end":381,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33116,"byte_end":33165,"line_start":382,"line_end":382,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33170,"byte_end":33173,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33178,"byte_end":33203,"line_start":384,"line_end":384,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33208,"byte_end":33255,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33260,"byte_end":33263,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33268,"byte_end":33306,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33311,"byte_end":33340,"line_start":388,"line_end":388,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33345,"byte_end":33365,"line_start":389,"line_end":389,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33370,"byte_end":33387,"line_start":390,"line_end":390,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33392,"byte_end":33442,"line_start":391,"line_end":391,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33447,"byte_end":33450,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33455,"byte_end":33531,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33536,"byte_end":33567,"line_start":394,"line_end":394,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33572,"byte_end":33582,"line_start":395,"line_end":395,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33587,"byte_end":33625,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33630,"byte_end":33633,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33638,"byte_end":33668,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33673,"byte_end":33738,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33743,"byte_end":33822,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33827,"byte_end":33853,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33858,"byte_end":33888,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33893,"byte_end":33906,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33911,"byte_end":33920,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33925,"byte_end":33930,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33935,"byte_end":33942,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33947,"byte_end":33954,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33959,"byte_end":33962,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":33967,"byte_end":33982,"line_start":409,"line_end":409,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34192,"byte_end":34201,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Poll as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34297,"byte_end":34300,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Poll as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38422,"byte_end":38430,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"fn register<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34426,"byte_end":34485,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34490,"byte_end":34493,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34498,"byte_end":34572,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34577,"byte_end":34652,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34657,"byte_end":34727,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34732,"byte_end":34735,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34740,"byte_end":34788,"line_start":435,"line_end":435,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34793,"byte_end":34796,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34801,"byte_end":34816,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34821,"byte_end":34824,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34829,"byte_end":34903,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34908,"byte_end":34971,"line_start":440,"line_end":440,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34976,"byte_end":34979,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34984,"byte_end":35058,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35063,"byte_end":35137,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35142,"byte_end":35210,"line_start":444,"line_end":444,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35215,"byte_end":35284,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35289,"byte_end":35316,"line_start":446,"line_end":446,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35321,"byte_end":35324,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35329,"byte_end":35398,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35403,"byte_end":35424,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35429,"byte_end":35432,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35437,"byte_end":35511,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35516,"byte_end":35590,"line_start":452,"line_end":452,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35595,"byte_end":35626,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35631,"byte_end":35634,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35639,"byte_end":35714,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35719,"byte_end":35773,"line_start":456,"line_end":456,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35778,"byte_end":35781,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35786,"byte_end":35862,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35867,"byte_end":35897,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35902,"byte_end":35905,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35910,"byte_end":35921,"line_start":461,"line_end":461,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35926,"byte_end":35929,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":35934,"byte_end":36005,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36010,"byte_end":36082,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36087,"byte_end":36156,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36161,"byte_end":36200,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36205,"byte_end":36208,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36213,"byte_end":36288,"line_start":468,"line_end":468,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36293,"byte_end":36368,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36373,"byte_end":36446,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36451,"byte_end":36519,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36524,"byte_end":36543,"line_start":472,"line_end":472,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36548,"byte_end":36551,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36556,"byte_end":36604,"line_start":474,"line_end":474,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36609,"byte_end":36651,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36656,"byte_end":36714,"line_start":476,"line_end":476,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36719,"byte_end":36777,"line_start":477,"line_end":477,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36782,"byte_end":36814,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36819,"byte_end":36822,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36827,"byte_end":36841,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":36846,"byte_end":36849,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37009,"byte_end":37037,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37042,"byte_end":37061,"line_start":485,"line_end":485,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37066,"byte_end":37113,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37118,"byte_end":37163,"line_start":487,"line_end":487,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37168,"byte_end":37196,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37201,"byte_end":37230,"line_start":489,"line_end":489,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37235,"byte_end":37274,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37279,"byte_end":37282,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37287,"byte_end":37319,"line_start":492,"line_end":492,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37324,"byte_end":37327,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37332,"byte_end":37385,"line_start":494,"line_end":494,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37390,"byte_end":37442,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37447,"byte_end":37512,"line_start":496,"line_end":496,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37517,"byte_end":37520,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37525,"byte_end":37563,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37568,"byte_end":37597,"line_start":499,"line_end":499,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37602,"byte_end":37622,"line_start":500,"line_end":500,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37627,"byte_end":37644,"line_start":501,"line_end":501,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37649,"byte_end":37699,"line_start":502,"line_end":502,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37704,"byte_end":37707,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37712,"byte_end":37761,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37766,"byte_end":37797,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37802,"byte_end":37847,"line_start":506,"line_end":506,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37852,"byte_end":37855,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37860,"byte_end":37870,"line_start":508,"line_end":508,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37875,"byte_end":37913,"line_start":509,"line_end":509,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37918,"byte_end":37921,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37926,"byte_end":37957,"line_start":511,"line_end":511,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":37962,"byte_end":37997,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38002,"byte_end":38028,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38033,"byte_end":38042,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38047,"byte_end":38050,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38055,"byte_end":38097,"line_start":516,"line_end":516,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38102,"byte_end":38151,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38156,"byte_end":38159,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38164,"byte_end":38194,"line_start":519,"line_end":519,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38199,"byte_end":38241,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38246,"byte_end":38309,"line_start":521,"line_end":521,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38314,"byte_end":38344,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38349,"byte_end":38362,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38367,"byte_end":38376,"line_start":524,"line_end":524,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38381,"byte_end":38386,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38391,"byte_end":38398,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38403,"byte_end":38410,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41098,"byte_end":41108,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"fn reregister<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38768,"byte_end":38830,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38835,"byte_end":38838,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38843,"byte_end":38912,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38917,"byte_end":38990,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":38995,"byte_end":39071,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39076,"byte_end":39079,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39084,"byte_end":39159,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39164,"byte_end":39240,"line_start":547,"line_end":547,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39245,"byte_end":39320,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39325,"byte_end":39354,"line_start":549,"line_end":549,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39359,"byte_end":39362,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39367,"byte_end":39443,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39448,"byte_end":39501,"line_start":552,"line_end":552,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39506,"byte_end":39509,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39514,"byte_end":39583,"line_start":554,"line_end":554,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39588,"byte_end":39658,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39663,"byte_end":39675,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39680,"byte_end":39683,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39688,"byte_end":39702,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39707,"byte_end":39710,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39870,"byte_end":39898,"line_start":562,"line_end":562,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39903,"byte_end":39922,"line_start":563,"line_end":563,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39927,"byte_end":39974,"line_start":564,"line_end":564,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":39979,"byte_end":40016,"line_start":565,"line_end":565,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40021,"byte_end":40049,"line_start":566,"line_end":566,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40054,"byte_end":40083,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40088,"byte_end":40091,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40096,"byte_end":40124,"line_start":569,"line_end":569,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40129,"byte_end":40132,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40137,"byte_end":40190,"line_start":571,"line_end":571,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40195,"byte_end":40247,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40252,"byte_end":40317,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40322,"byte_end":40325,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40330,"byte_end":40389,"line_start":575,"line_end":575,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40394,"byte_end":40423,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40428,"byte_end":40448,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40453,"byte_end":40470,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40475,"byte_end":40504,"line_start":579,"line_end":579,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40509,"byte_end":40512,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40517,"byte_end":40592,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40597,"byte_end":40647,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40652,"byte_end":40683,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40688,"byte_end":40708,"line_start":584,"line_end":584,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40713,"byte_end":40730,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40735,"byte_end":40764,"line_start":586,"line_end":586,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40769,"byte_end":40785,"line_start":587,"line_end":587,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40790,"byte_end":40797,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40802,"byte_end":40809,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40814,"byte_end":40817,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40822,"byte_end":40870,"line_start":591,"line_end":591,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40875,"byte_end":40907,"line_start":592,"line_end":592,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40912,"byte_end":40966,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":40971,"byte_end":41026,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41031,"byte_end":41086,"line_start":595,"line_end":595,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43579,"byte_end":43589,"line_start":659,"line_end":659,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"fn deregister<S>(&Self, &mut S) -> io::Result<()> where S: event::Source +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41450,"byte_end":41511,"line_start":608,"line_end":608,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41516,"byte_end":41519,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41524,"byte_end":41600,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41605,"byte_end":41676,"line_start":611,"line_end":611,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41681,"byte_end":41755,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41760,"byte_end":41832,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41837,"byte_end":41913,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41918,"byte_end":41991,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":41996,"byte_end":42009,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42014,"byte_end":42017,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42022,"byte_end":42098,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42103,"byte_end":42156,"line_start":619,"line_end":619,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42161,"byte_end":42164,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42169,"byte_end":42232,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42237,"byte_end":42309,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42314,"byte_end":42366,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42371,"byte_end":42374,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42379,"byte_end":42393,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42398,"byte_end":42401,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42561,"byte_end":42589,"line_start":629,"line_end":629,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42594,"byte_end":42613,"line_start":630,"line_end":630,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42618,"byte_end":42665,"line_start":631,"line_end":631,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42670,"byte_end":42715,"line_start":632,"line_end":632,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42720,"byte_end":42748,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42753,"byte_end":42782,"line_start":634,"line_end":634,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42787,"byte_end":42815,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42820,"byte_end":42823,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42828,"byte_end":42860,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42865,"byte_end":42868,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42873,"byte_end":42926,"line_start":639,"line_end":639,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42931,"byte_end":42983,"line_start":640,"line_end":640,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":42988,"byte_end":43053,"line_start":641,"line_end":641,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43058,"byte_end":43061,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43066,"byte_end":43104,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43109,"byte_end":43138,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43143,"byte_end":43163,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43168,"byte_end":43185,"line_start":646,"line_end":646,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43190,"byte_end":43219,"line_start":647,"line_end":647,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43224,"byte_end":43227,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43232,"byte_end":43277,"line_start":649,"line_end":649,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43282,"byte_end":43285,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43290,"byte_end":43339,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43344,"byte_end":43347,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43352,"byte_end":43423,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43428,"byte_end":43486,"line_start":654,"line_end":654,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43491,"byte_end":43522,"line_start":655,"line_end":655,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43527,"byte_end":43543,"line_start":656,"line_end":656,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43548,"byte_end":43555,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43560,"byte_end":43567,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43986,"byte_end":43995,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43786,"byte_end":43835,"line_start":667,"line_end":667,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43840,"byte_end":43843,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43848,"byte_end":43921,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":43926,"byte_end":43974,"line_start":670,"line_end":670,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44706,"byte_end":44709,"line_start":695,"line_end":695,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Registry as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44867,"byte_end":44876,"line_start":702,"line_end":702,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Registry as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193105,"byte_end":14193113,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190381,"byte_end":14190453,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190454,"byte_end":14190457,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190458,"byte_end":14190527,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190528,"byte_end":14190531,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190532,"byte_end":14190605,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190606,"byte_end":14190684,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190685,"byte_end":14190730,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190731,"byte_end":14190734,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190735,"byte_end":14190811,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190812,"byte_end":14190884,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190885,"byte_end":14190965,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14190966,"byte_end":14191027,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191028,"byte_end":14191089,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191090,"byte_end":14191093,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191094,"byte_end":14191143,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191144,"byte_end":14191177,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191178,"byte_end":14191245,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191246,"byte_end":14191249,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191250,"byte_end":14191264,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191265,"byte_end":14191268,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191269,"byte_end":14191285,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191286,"byte_end":14191289,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191497,"byte_end":14191525,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191526,"byte_end":14191573,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191574,"byte_end":14191611,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191612,"byte_end":14191640,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191641,"byte_end":14191644,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191645,"byte_end":14191680,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191681,"byte_end":14191711,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191712,"byte_end":14191715,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191716,"byte_end":14191742,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191743,"byte_end":14191796,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191797,"byte_end":14191800,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191801,"byte_end":14191829,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191830,"byte_end":14191833,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191834,"byte_end":14191862,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191863,"byte_end":14191892,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191893,"byte_end":14191938,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191939,"byte_end":14191956,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191957,"byte_end":14191986,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14191987,"byte_end":14192003,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192004,"byte_end":14192011,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192012,"byte_end":14192019,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192020,"byte_end":14192023,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192024,"byte_end":14192099,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192100,"byte_end":14192103,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192257,"byte_end":14192305,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192306,"byte_end":14192334,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192335,"byte_end":14192338,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192339,"byte_end":14192372,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192373,"byte_end":14192389,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192390,"byte_end":14192393,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192394,"byte_end":14192419,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192420,"byte_end":14192441,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192442,"byte_end":14192460,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192461,"byte_end":14192466,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192467,"byte_end":14192470,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192471,"byte_end":14192504,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192505,"byte_end":14192591,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192592,"byte_end":14192621,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192622,"byte_end":14192631,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192632,"byte_end":14192699,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192700,"byte_end":14192709,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192710,"byte_end":14192713,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192714,"byte_end":14192802,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192803,"byte_end":14192832,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192833,"byte_end":14192842,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192843,"byte_end":14192912,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192913,"byte_end":14192922,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192923,"byte_end":14192926,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14192927,"byte_end":14193000,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193001,"byte_end":14193052,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193053,"byte_end":14193062,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193063,"byte_end":14193068,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193069,"byte_end":14193076,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193118,"byte_end":14193131,"line_start":92,"line_end":92,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193184,"byte_end":14193192,"line_start":95,"line_end":95,"column_start":8,"column_end":16},"name":"register","qualname":"<SourceFd as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193397,"byte_end":14193407,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"reregister","qualname":"<SourceFd as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193614,"byte_end":14193624,"line_start":113,"line_end":113,"column_start":8,"column_end":18},"name":"deregister","qualname":"<SourceFd as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217554,"byte_end":14217564,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217188,"byte_end":14217248,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217249,"byte_end":14217252,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217253,"byte_end":14217329,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217330,"byte_end":14217406,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217407,"byte_end":14217451,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217452,"byte_end":14217455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217456,"byte_end":14217511,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217512,"byte_end":14217542,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14219723,"byte_end":14219733,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14220053,"byte_end":14220064,"line_start":90,"line_end":90,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14220506,"byte_end":14220527,"line_start":102,"line_end":102,"column_start":16,"column_end":37},"name":"as_abstract_namespace","qualname":"<SocketAddr>::as_abstract_namespace","value":"fn as_abstract_namespace(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is an abstract namespace\n without the leading null byte.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14220762,"byte_end":14220765,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SocketAddr as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232685,"byte_end":14232688,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228048,"byte_end":14228088,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228089,"byte_end":14228092,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228093,"byte_end":14228171,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228172,"byte_end":14228222,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228223,"byte_end":14228226,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228227,"byte_end":14228307,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228308,"byte_end":14228388,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228389,"byte_end":14228414,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228415,"byte_end":14228418,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228419,"byte_end":14228504,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228505,"byte_end":14228508,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228509,"byte_end":14228521,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228522,"byte_end":14228525,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228526,"byte_end":14228600,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228601,"byte_end":14228681,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228682,"byte_end":14228758,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228759,"byte_end":14228762,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228763,"byte_end":14228843,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228844,"byte_end":14228916,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228917,"byte_end":14228992,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14228993,"byte_end":14229070,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229071,"byte_end":14229150,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229151,"byte_end":14229154,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229155,"byte_end":14229191,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229192,"byte_end":14229240,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229241,"byte_end":14229277,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229278,"byte_end":14229325,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229326,"byte_end":14229378,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229379,"byte_end":14229433,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229434,"byte_end":14229437,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229438,"byte_end":14229457,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229458,"byte_end":14229461,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229462,"byte_end":14229535,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229536,"byte_end":14229605,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229606,"byte_end":14229609,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229610,"byte_end":14229693,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229694,"byte_end":14229697,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229698,"byte_end":14229712,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229713,"byte_end":14229716,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229717,"byte_end":14229794,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229795,"byte_end":14229813,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229814,"byte_end":14229817,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229818,"byte_end":14229825,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229826,"byte_end":14229863,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229864,"byte_end":14229867,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229868,"byte_end":14229913,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229914,"byte_end":14229938,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229939,"byte_end":14229942,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229943,"byte_end":14229996,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14229997,"byte_end":14230035,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230036,"byte_end":14230074,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230075,"byte_end":14230078,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230079,"byte_end":14230114,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230115,"byte_end":14230176,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230177,"byte_end":14230209,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230210,"byte_end":14230256,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230257,"byte_end":14230260,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230261,"byte_end":14230286,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230287,"byte_end":14230337,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230338,"byte_end":14230341,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230342,"byte_end":14230383,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230384,"byte_end":14230460,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230461,"byte_end":14230535,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230536,"byte_end":14230539,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230540,"byte_end":14230582,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230583,"byte_end":14230586,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230587,"byte_end":14230597,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230598,"byte_end":14230636,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230637,"byte_end":14230640,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230641,"byte_end":14230677,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230678,"byte_end":14230711,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230712,"byte_end":14230758,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230759,"byte_end":14230812,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230813,"byte_end":14230889,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230890,"byte_end":14230965,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14230966,"byte_end":14231014,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231015,"byte_end":14231079,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231080,"byte_end":14231112,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231113,"byte_end":14231147,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231148,"byte_end":14231176,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231177,"byte_end":14231207,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231208,"byte_end":14231250,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231251,"byte_end":14231304,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231305,"byte_end":14231364,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231365,"byte_end":14231410,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231411,"byte_end":14231455,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231456,"byte_end":14231490,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231491,"byte_end":14231509,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231510,"byte_end":14231546,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231547,"byte_end":14231560,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231561,"byte_end":14231570,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231571,"byte_end":14231576,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231577,"byte_end":14231584,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231585,"byte_end":14231592,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231593,"byte_end":14231596,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231597,"byte_end":14231661,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231662,"byte_end":14231665,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231666,"byte_end":14231673,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231674,"byte_end":14231692,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231693,"byte_end":14231698,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231699,"byte_end":14231746,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231747,"byte_end":14231773,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231774,"byte_end":14231779,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231780,"byte_end":14231820,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231821,"byte_end":14231861,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231862,"byte_end":14231867,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231868,"byte_end":14231903,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231904,"byte_end":14231946,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231947,"byte_end":14231979,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14231980,"byte_end":14232026,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232027,"byte_end":14232030,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232031,"byte_end":14232081,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232082,"byte_end":14232085,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232086,"byte_end":14232162,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232163,"byte_end":14232237,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232238,"byte_end":14232241,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232242,"byte_end":14232265,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232266,"byte_end":14232283,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232284,"byte_end":14232287,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232288,"byte_end":14232322,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232323,"byte_end":14232326,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232327,"byte_end":14232359,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232360,"byte_end":14232389,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232390,"byte_end":14232442,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232443,"byte_end":14232499,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232500,"byte_end":14232544,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232545,"byte_end":14232575,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232576,"byte_end":14232590,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232591,"byte_end":14232623,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232624,"byte_end":14232633,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232634,"byte_end":14232639,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232640,"byte_end":14232661,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232662,"byte_end":14232669,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14232670,"byte_end":14232677,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234666,"byte_end":14234672,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234546,"byte_end":14234578,"line_start":207,"line_end":207,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234579,"byte_end":14234582,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234583,"byte_end":14234637,"line_start":209,"line_end":209,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234789,"byte_end":14234804,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234723,"byte_end":14234777,"line_start":216,"line_end":216,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237137,"byte_end":14237143,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Sender>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234923,"byte_end":14234997,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235002,"byte_end":14235040,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235045,"byte_end":14235048,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235053,"byte_end":14235064,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235069,"byte_end":14235072,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235077,"byte_end":14235147,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235152,"byte_end":14235228,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235233,"byte_end":14235270,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235275,"byte_end":14235278,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235283,"byte_end":14235328,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235333,"byte_end":14235336,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235341,"byte_end":14235355,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235360,"byte_end":14235363,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235368,"byte_end":14235375,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235380,"byte_end":14235408,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235413,"byte_end":14235418,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235423,"byte_end":14235470,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235475,"byte_end":14235491,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235496,"byte_end":14235531,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235536,"byte_end":14235560,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235565,"byte_end":14235568,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235573,"byte_end":14235615,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235620,"byte_end":14235623,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235628,"byte_end":14235671,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235676,"byte_end":14235679,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235684,"byte_end":14235750,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235755,"byte_end":14235812,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235817,"byte_end":14235840,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235845,"byte_end":14235875,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235880,"byte_end":14235931,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14235936,"byte_end":14236017,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236022,"byte_end":14236044,"line_start":252,"line_end":252,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236049,"byte_end":14236077,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236082,"byte_end":14236098,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236103,"byte_end":14236177,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236182,"byte_end":14236230,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236235,"byte_end":14236278,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236283,"byte_end":14236292,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236297,"byte_end":14236305,"line_start":259,"line_end":259,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236310,"byte_end":14236345,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236350,"byte_end":14236353,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236358,"byte_end":14236403,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236408,"byte_end":14236411,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236416,"byte_end":14236485,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236490,"byte_end":14236546,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236551,"byte_end":14236578,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236583,"byte_end":14236615,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236620,"byte_end":14236671,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236676,"byte_end":14236758,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236763,"byte_end":14236785,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236790,"byte_end":14236818,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236823,"byte_end":14236839,"line_start":272,"line_end":272,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236844,"byte_end":14236917,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236922,"byte_end":14236970,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14236975,"byte_end":14237018,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237023,"byte_end":14237032,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237037,"byte_end":14237045,"line_start":277,"line_end":277,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237050,"byte_end":14237084,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237089,"byte_end":14237101,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237106,"byte_end":14237113,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237118,"byte_end":14237125,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237316,"byte_end":14237324,"line_start":291,"line_end":291,"column_start":8,"column_end":16},"name":"register","qualname":"<Sender as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237521,"byte_end":14237531,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Sender as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237730,"byte_end":14237740,"line_start":309,"line_end":309,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Sender as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237873,"byte_end":14237878,"line_start":315,"line_end":315,"column_start":8,"column_end":13},"name":"write","qualname":"<Sender as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237996,"byte_end":14238010,"line_start":319,"line_end":319,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<Sender as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238148,"byte_end":14238153,"line_start":323,"line_end":323,"column_start":8,"column_end":13},"name":"flush","qualname":"<Sender as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238280,"byte_end":14238285,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"write","qualname":"<&'_ Sender as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238403,"byte_end":14238417,"line_start":333,"line_end":333,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'_ Sender as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238555,"byte_end":14238560,"line_start":337,"line_end":337,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'_ Sender as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238769,"byte_end":14238773,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"from","qualname":"<Sender as std::convert::From>::from","value":"fn from(ChildStdin) -> Sender","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238993,"byte_end":14239004,"line_start":353,"line_end":353,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<Sender as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> Sender","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239154,"byte_end":14239163,"line_start":361,"line_end":361,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Sender as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239257,"byte_end":14239268,"line_start":367,"line_end":367,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<Sender as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239463,"byte_end":14239471,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1001}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239341,"byte_end":14239375,"line_start":372,"line_end":372,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239376,"byte_end":14239379,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239380,"byte_end":14239434,"line_start":374,"line_end":374,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239592,"byte_end":14239607,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239524,"byte_end":14239580,"line_start":381,"line_end":381,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241940,"byte_end":14241946,"line_start":447,"line_end":447,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Receiver>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239726,"byte_end":14239800,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239805,"byte_end":14239843,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239848,"byte_end":14239851,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239856,"byte_end":14239867,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239872,"byte_end":14239875,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239880,"byte_end":14239950,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239955,"byte_end":14240031,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240036,"byte_end":14240073,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240078,"byte_end":14240081,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240086,"byte_end":14240131,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240136,"byte_end":14240139,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240144,"byte_end":14240158,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240163,"byte_end":14240166,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240171,"byte_end":14240178,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240183,"byte_end":14240211,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240216,"byte_end":14240221,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240226,"byte_end":14240273,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240278,"byte_end":14240294,"line_start":403,"line_end":403,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240299,"byte_end":14240334,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240339,"byte_end":14240363,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240368,"byte_end":14240371,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240376,"byte_end":14240418,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240423,"byte_end":14240426,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240431,"byte_end":14240474,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240479,"byte_end":14240482,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240487,"byte_end":14240553,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240558,"byte_end":14240615,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240620,"byte_end":14240643,"line_start":413,"line_end":413,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240648,"byte_end":14240678,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240683,"byte_end":14240734,"line_start":415,"line_end":415,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240739,"byte_end":14240820,"line_start":416,"line_end":416,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240825,"byte_end":14240847,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240852,"byte_end":14240880,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240885,"byte_end":14240901,"line_start":419,"line_end":419,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240906,"byte_end":14240980,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14240985,"byte_end":14241033,"line_start":421,"line_end":421,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241038,"byte_end":14241081,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241086,"byte_end":14241095,"line_start":423,"line_end":423,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241100,"byte_end":14241108,"line_start":424,"line_end":424,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241113,"byte_end":14241148,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241153,"byte_end":14241156,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241161,"byte_end":14241206,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241211,"byte_end":14241214,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241219,"byte_end":14241288,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241293,"byte_end":14241349,"line_start":430,"line_end":430,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241354,"byte_end":14241381,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241386,"byte_end":14241418,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241423,"byte_end":14241474,"line_start":433,"line_end":433,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241479,"byte_end":14241561,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241566,"byte_end":14241588,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241593,"byte_end":14241621,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241626,"byte_end":14241642,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241647,"byte_end":14241720,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241725,"byte_end":14241773,"line_start":439,"line_end":439,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241778,"byte_end":14241821,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241826,"byte_end":14241835,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241840,"byte_end":14241848,"line_start":442,"line_end":442,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241853,"byte_end":14241887,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241892,"byte_end":14241904,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241909,"byte_end":14241916,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14241921,"byte_end":14241928,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242121,"byte_end":14242129,"line_start":456,"line_end":456,"column_start":8,"column_end":16},"name":"register","qualname":"<Receiver as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242326,"byte_end":14242336,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Receiver as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242535,"byte_end":14242545,"line_start":474,"line_end":474,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Receiver as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242679,"byte_end":14242683,"line_start":480,"line_end":480,"column_start":8,"column_end":12},"name":"read","qualname":"<Receiver as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242804,"byte_end":14242817,"line_start":484,"line_end":484,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<Receiver as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242989,"byte_end":14242993,"line_start":490,"line_end":490,"column_start":8,"column_end":12},"name":"read","qualname":"<&'_ Receiver as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243114,"byte_end":14243127,"line_start":494,"line_end":494,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'_ Receiver as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243383,"byte_end":14243387,"line_start":503,"line_end":503,"column_start":8,"column_end":12},"name":"from","qualname":"<Receiver as std::convert::From>::from","value":"fn from(ChildStdout) -> Receiver","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243690,"byte_end":14243694,"line_start":513,"line_end":513,"column_start":8,"column_end":12},"name":"from","qualname":"<Receiver as std::convert::From>::from","value":"fn from(ChildStderr) -> Receiver","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243924,"byte_end":14243935,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<Receiver as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> Receiver","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244091,"byte_end":14244100,"line_start":528,"line_end":528,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Receiver as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244196,"byte_end":14244207,"line_start":534,"line_end":534,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<Receiver as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52606,"byte_end":52611,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47657,"byte_end":47713,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47714,"byte_end":47717,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47718,"byte_end":47787,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47788,"byte_end":47844,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47845,"byte_end":47848,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47849,"byte_end":47900,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47901,"byte_end":47904,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47905,"byte_end":47953,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47954,"byte_end":47984,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":47985,"byte_end":48049,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48050,"byte_end":48118,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48119,"byte_end":48122,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48123,"byte_end":48136,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48137,"byte_end":48140,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48141,"byte_end":48218,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48219,"byte_end":48288,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48289,"byte_end":48292,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48293,"byte_end":48336,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48337,"byte_end":48340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48488,"byte_end":48516,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48517,"byte_end":48564,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48565,"byte_end":48610,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48611,"byte_end":48641,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48642,"byte_end":48645,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48646,"byte_end":48666,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48667,"byte_end":48697,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48698,"byte_end":48732,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48733,"byte_end":48736,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48737,"byte_end":48811,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48812,"byte_end":48846,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48847,"byte_end":48850,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48851,"byte_end":48929,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48930,"byte_end":48954,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48955,"byte_end":48995,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":48996,"byte_end":48999,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49000,"byte_end":49033,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49034,"byte_end":49071,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49072,"byte_end":49075,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49076,"byte_end":49135,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49136,"byte_end":49170,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49171,"byte_end":49174,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49175,"byte_end":49201,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49202,"byte_end":49234,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49235,"byte_end":49238,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49239,"byte_end":49258,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49259,"byte_end":49325,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49326,"byte_end":49329,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49330,"byte_end":49358,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49359,"byte_end":49434,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49435,"byte_end":49438,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49439,"byte_end":49513,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49514,"byte_end":49552,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49553,"byte_end":49580,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49581,"byte_end":49613,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49614,"byte_end":49617,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49618,"byte_end":49696,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49697,"byte_end":49734,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49735,"byte_end":49778,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49779,"byte_end":49833,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49834,"byte_end":49843,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49844,"byte_end":49851,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49852,"byte_end":49855,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49856,"byte_end":49876,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49877,"byte_end":49926,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49927,"byte_end":49930,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49931,"byte_end":49986,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":49987,"byte_end":50014,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50015,"byte_end":50018,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50019,"byte_end":50045,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50046,"byte_end":50056,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50057,"byte_end":50083,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50084,"byte_end":50122,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50123,"byte_end":50126,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50127,"byte_end":50157,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50158,"byte_end":50191,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50192,"byte_end":50221,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50222,"byte_end":50295,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50296,"byte_end":50331,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50332,"byte_end":50358,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50359,"byte_end":50408,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50409,"byte_end":50461,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50462,"byte_end":50516,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50517,"byte_end":50586,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50587,"byte_end":50637,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50638,"byte_end":50671,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50672,"byte_end":50675,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50676,"byte_end":50739,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50740,"byte_end":50809,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50810,"byte_end":50865,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50866,"byte_end":50869,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50870,"byte_end":50936,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":50937,"byte_end":51035,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51036,"byte_end":51039,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51040,"byte_end":51091,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51092,"byte_end":51154,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51155,"byte_end":51184,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51185,"byte_end":51269,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51270,"byte_end":51348,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51349,"byte_end":51387,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51388,"byte_end":51417,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51418,"byte_end":51493,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51494,"byte_end":51519,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51520,"byte_end":51541,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51542,"byte_end":51559,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51560,"byte_end":51586,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51587,"byte_end":51634,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51635,"byte_end":51661,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51662,"byte_end":51741,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51742,"byte_end":51780,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51781,"byte_end":51856,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51857,"byte_end":51912,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51913,"byte_end":51951,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51952,"byte_end":51981,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":51982,"byte_end":52054,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52055,"byte_end":52107,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52108,"byte_end":52192,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52193,"byte_end":52269,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52270,"byte_end":52308,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52309,"byte_end":52338,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52339,"byte_end":52414,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52415,"byte_end":52440,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52441,"byte_end":52462,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52463,"byte_end":52480,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52481,"byte_end":52494,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52495,"byte_end":52504,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52505,"byte_end":52510,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52511,"byte_end":52518,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52519,"byte_end":52526,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52612,"byte_end":52621,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/token.rs","byte_start":52661,"byte_end":52665,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"from","qualname":"<usize as std::convert::From>::from","value":"fn from(Token) -> usize","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55283,"byte_end":55288,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52762,"byte_end":52811,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52812,"byte_end":52815,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52816,"byte_end":52889,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52890,"byte_end":52963,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52964,"byte_end":52967,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52968,"byte_end":52998,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":52999,"byte_end":53061,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53062,"byte_end":53105,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53106,"byte_end":53109,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53110,"byte_end":53121,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53122,"byte_end":53125,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53126,"byte_end":53204,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53205,"byte_end":53218,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53219,"byte_end":53222,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53223,"byte_end":53301,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53302,"byte_end":53375,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53376,"byte_end":53447,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53448,"byte_end":53464,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53465,"byte_end":53468,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53469,"byte_end":53495,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53496,"byte_end":53499,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53500,"byte_end":53574,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53575,"byte_end":53653,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53654,"byte_end":53693,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53694,"byte_end":53697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53698,"byte_end":53773,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: https://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53774,"byte_end":53841,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53842,"byte_end":53845,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53846,"byte_end":53860,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53861,"byte_end":53864,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53865,"byte_end":53914,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":53915,"byte_end":53918,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54022,"byte_end":54081,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54082,"byte_end":54102,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54103,"byte_end":54131,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54132,"byte_end":54155,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54156,"byte_end":54159,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54160,"byte_end":54202,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54203,"byte_end":54206,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54207,"byte_end":54247,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54248,"byte_end":54251,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54252,"byte_end":54284,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54285,"byte_end":54331,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54332,"byte_end":54335,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54336,"byte_end":54403,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54404,"byte_end":54407,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54408,"byte_end":54479,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54480,"byte_end":54510,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54511,"byte_end":54542,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54543,"byte_end":54583,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54584,"byte_end":54627,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54628,"byte_end":54678,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54679,"byte_end":54682,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54683,"byte_end":54739,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54740,"byte_end":54787,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54788,"byte_end":54795,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54796,"byte_end":54799,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54800,"byte_end":54870,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54871,"byte_end":54905,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54906,"byte_end":54909,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54910,"byte_end":54989,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":54990,"byte_end":55016,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55017,"byte_end":55049,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55050,"byte_end":55102,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55103,"byte_end":55142,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55143,"byte_end":55191,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55192,"byte_end":55221,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55222,"byte_end":55238,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55239,"byte_end":55246,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55247,"byte_end":55254,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55371,"byte_end":55374,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55334,"byte_end":55359,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55702,"byte_end":55706,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55593,"byte_end":55647,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55652,"byte_end":55655,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55660,"byte_end":55690,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":159},{"krate":0,"index":191},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/mod.rs","byte_start":55769,"byte_end":55809,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56386,"byte_end":56391,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1031}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56020,"byte_end":56042,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56043,"byte_end":56046,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56047,"byte_end":56122,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56123,"byte_end":56142,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56143,"byte_end":56146,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56147,"byte_end":56210,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56211,"byte_end":56214,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56215,"byte_end":56266,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56267,"byte_end":56300,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56301,"byte_end":56336,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56354,"byte_end":56374,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56479,"byte_end":56484,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56437,"byte_end":56467,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57136,"byte_end":57147,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56553,"byte_end":56611,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56616,"byte_end":56619,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56624,"byte_end":56635,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56640,"byte_end":56643,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56648,"byte_end":56714,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56719,"byte_end":56784,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56789,"byte_end":56850,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56855,"byte_end":56995,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57000,"byte_end":57076,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57081,"byte_end":57124,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57291,"byte_end":57302,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57221,"byte_end":57279,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58305,"byte_end":58313,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57376,"byte_end":57431,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57436,"byte_end":57439,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57444,"byte_end":57519,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57524,"byte_end":57597,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57602,"byte_end":57652,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57657,"byte_end":57660,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57665,"byte_end":57676,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57681,"byte_end":57684,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57689,"byte_end":57764,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57769,"byte_end":57785,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57790,"byte_end":57793,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57798,"byte_end":57858,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57863,"byte_end":57866,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57871,"byte_end":57910,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57915,"byte_end":57954,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":57959,"byte_end":57998,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58003,"byte_end":58076,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58081,"byte_end":58084,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58089,"byte_end":58148,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58153,"byte_end":58216,"line_start":65,"line_end":65,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58221,"byte_end":58293,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59627,"byte_end":59641,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58384,"byte_end":58445,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58450,"byte_end":58453,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58458,"byte_end":58469,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58474,"byte_end":58477,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58482,"byte_end":58555,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58560,"byte_end":58573,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58578,"byte_end":58641,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58646,"byte_end":58719,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58724,"byte_end":58743,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58748,"byte_end":58822,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58827,"byte_end":58888,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58893,"byte_end":58896,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58901,"byte_end":58973,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":58978,"byte_end":59046,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59051,"byte_end":59086,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59091,"byte_end":59094,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59099,"byte_end":59159,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59164,"byte_end":59167,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59172,"byte_end":59211,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59216,"byte_end":59255,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59260,"byte_end":59299,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59304,"byte_end":59354,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59359,"byte_end":59398,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59403,"byte_end":59406,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59411,"byte_end":59470,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59475,"byte_end":59538,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59543,"byte_end":59615,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60873,"byte_end":60888,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59718,"byte_end":59780,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59785,"byte_end":59788,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59793,"byte_end":59804,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59809,"byte_end":59812,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59817,"byte_end":59886,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59891,"byte_end":59965,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59970,"byte_end":59973,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":59978,"byte_end":60046,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60051,"byte_end":60086,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60091,"byte_end":60094,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60099,"byte_end":60171,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60176,"byte_end":60245,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60250,"byte_end":60285,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60290,"byte_end":60293,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60298,"byte_end":60358,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60363,"byte_end":60366,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60371,"byte_end":60410,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60415,"byte_end":60454,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60459,"byte_end":60498,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60503,"byte_end":60546,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60551,"byte_end":60600,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60605,"byte_end":60644,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60649,"byte_end":60652,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60657,"byte_end":60716,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60721,"byte_end":60784,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60789,"byte_end":60861,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61660,"byte_end":61671,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":60966,"byte_end":61024,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61029,"byte_end":61032,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61037,"byte_end":61048,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61053,"byte_end":61056,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61061,"byte_end":61136,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61141,"byte_end":61160,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61165,"byte_end":61168,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61173,"byte_end":61233,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61238,"byte_end":61241,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61246,"byte_end":61285,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61290,"byte_end":61329,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61334,"byte_end":61373,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61378,"byte_end":61417,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61422,"byte_end":61425,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61430,"byte_end":61489,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61494,"byte_end":61557,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61562,"byte_end":61634,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61639,"byte_end":61648,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62477,"byte_end":62483,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61745,"byte_end":61798,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61803,"byte_end":61806,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61811,"byte_end":61822,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61827,"byte_end":61830,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61835,"byte_end":61911,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61916,"byte_end":61919,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61924,"byte_end":61984,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61989,"byte_end":61992,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":61997,"byte_end":62036,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62041,"byte_end":62080,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62085,"byte_end":62124,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62129,"byte_end":62172,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62177,"byte_end":62180,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62185,"byte_end":62248,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62253,"byte_end":62256,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62261,"byte_end":62320,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62325,"byte_end":62388,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62393,"byte_end":62465,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62787,"byte_end":62793,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62552,"byte_end":62605,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62610,"byte_end":62613,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62618,"byte_end":62629,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62634,"byte_end":62637,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62642,"byte_end":62717,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":62722,"byte_end":62775,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":63613,"byte_end":63616,"line_start":203,"line_end":203,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Event as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65790,"byte_end":65796,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":170}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64680,"byte_end":64717,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64718,"byte_end":64721,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64722,"byte_end":64797,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64798,"byte_end":64875,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64876,"byte_end":64950,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64951,"byte_end":64993,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64994,"byte_end":64997,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":64998,"byte_end":65049,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65050,"byte_end":65053,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65054,"byte_end":65105,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65106,"byte_end":65139,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65140,"byte_end":65143,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65144,"byte_end":65158,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65159,"byte_end":65162,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65266,"byte_end":65294,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65295,"byte_end":65342,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65343,"byte_end":65371,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65372,"byte_end":65400,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65401,"byte_end":65404,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65405,"byte_end":65454,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65455,"byte_end":65487,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65488,"byte_end":65493,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65494,"byte_end":65527,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65528,"byte_end":65531,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65532,"byte_end":65577,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65578,"byte_end":65581,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65582,"byte_end":65644,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65645,"byte_end":65648,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65649,"byte_end":65681,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65682,"byte_end":65739,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65740,"byte_end":65745,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65746,"byte_end":65762,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65763,"byte_end":65770,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65771,"byte_end":65778,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66629,"byte_end":66633,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65826,"byte_end":65850,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65851,"byte_end":65854,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65855,"byte_end":65919,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65920,"byte_end":65923,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65924,"byte_end":65958,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":65959,"byte_end":66003,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66004,"byte_end":66007,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66008,"byte_end":66022,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66023,"byte_end":66026,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66130,"byte_end":66158,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66159,"byte_end":66206,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66207,"byte_end":66235,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66236,"byte_end":66264,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66265,"byte_end":66268,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66269,"byte_end":66318,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66319,"byte_end":66351,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66352,"byte_end":66355,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66356,"byte_end":66392,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66393,"byte_end":66396,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66397,"byte_end":66459,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66460,"byte_end":66463,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66464,"byte_end":66496,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66497,"byte_end":66554,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66555,"byte_end":66560,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66561,"byte_end":66577,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66578,"byte_end":66585,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66586,"byte_end":66593,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66968,"byte_end":66981,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66700,"byte_end":66769,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66774,"byte_end":66777,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66782,"byte_end":66796,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66801,"byte_end":66804,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66809,"byte_end":66816,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66821,"byte_end":66841,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66846,"byte_end":66849,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66854,"byte_end":66899,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66904,"byte_end":66944,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66949,"byte_end":66956,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67340,"byte_end":67348,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67106,"byte_end":67168,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67173,"byte_end":67176,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67181,"byte_end":67188,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67193,"byte_end":67213,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67218,"byte_end":67221,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67226,"byte_end":67271,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67276,"byte_end":67316,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67321,"byte_end":67328,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67654,"byte_end":67662,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67408,"byte_end":67464,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67469,"byte_end":67472,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67477,"byte_end":67491,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67496,"byte_end":67499,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67504,"byte_end":67511,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67516,"byte_end":67536,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67541,"byte_end":67544,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67549,"byte_end":67594,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67599,"byte_end":67630,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67635,"byte_end":67642,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68463,"byte_end":68467,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67721,"byte_end":67769,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67774,"byte_end":67777,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67782,"byte_end":67796,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67801,"byte_end":67804,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67920,"byte_end":67948,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":67953,"byte_end":68000,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68005,"byte_end":68033,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68038,"byte_end":68066,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68071,"byte_end":68074,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68079,"byte_end":68128,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68133,"byte_end":68165,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68170,"byte_end":68173,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68178,"byte_end":68214,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68219,"byte_end":68222,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68227,"byte_end":68289,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68294,"byte_end":68297,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68302,"byte_end":68334,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68339,"byte_end":68396,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68401,"byte_end":68406,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68411,"byte_end":68427,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68432,"byte_end":68439,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68444,"byte_end":68451,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69435,"byte_end":69440,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68570,"byte_end":68628,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68633,"byte_end":68636,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68641,"byte_end":68652,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68657,"byte_end":68660,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68665,"byte_end":68738,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68743,"byte_end":68761,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68766,"byte_end":68769,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68774,"byte_end":68788,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68793,"byte_end":68796,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68912,"byte_end":68940,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68945,"byte_end":68992,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":68997,"byte_end":69025,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69030,"byte_end":69058,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69063,"byte_end":69066,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69071,"byte_end":69120,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69125,"byte_end":69157,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69162,"byte_end":69165,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69170,"byte_end":69206,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69211,"byte_end":69214,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69219,"byte_end":69281,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69286,"byte_end":69289,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69294,"byte_end":69318,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69323,"byte_end":69342,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69347,"byte_end":69378,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69383,"byte_end":69399,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69404,"byte_end":69411,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69416,"byte_end":69423,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69722,"byte_end":69731,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Events as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69855,"byte_end":69859,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":70077,"byte_end":70086,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":70206,"byte_end":70211,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"count","qualname":"<Iter as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8478},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":70305,"byte_end":70308,"line_start":227,"line_end":227,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Events as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73018,"byte_end":73024,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70471,"byte_end":70532,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70533,"byte_end":70536,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70537,"byte_end":70600,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70601,"byte_end":70674,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70675,"byte_end":70753,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70754,"byte_end":70766,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70767,"byte_end":70770,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70771,"byte_end":70809,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70810,"byte_end":70813,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70814,"byte_end":70855,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70856,"byte_end":70859,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70860,"byte_end":70894,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70895,"byte_end":70898,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70899,"byte_end":70978,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":70979,"byte_end":71053,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71054,"byte_end":71131,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71132,"byte_end":71211,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71212,"byte_end":71229,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71230,"byte_end":71233,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71234,"byte_end":71281,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71282,"byte_end":71328,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71329,"byte_end":71332,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71333,"byte_end":71364,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71365,"byte_end":71368,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71369,"byte_end":71448,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71449,"byte_end":71527,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71528,"byte_end":71607,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71608,"byte_end":71683,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71684,"byte_end":71741,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71742,"byte_end":71745,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71746,"byte_end":71807,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71808,"byte_end":71811,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71812,"byte_end":71826,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71827,"byte_end":71830,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71831,"byte_end":71889,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":71890,"byte_end":71893,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72041,"byte_end":72082,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72083,"byte_end":72110,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72111,"byte_end":72139,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72140,"byte_end":72143,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72144,"byte_end":72160,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72161,"byte_end":72164,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72165,"byte_end":72190,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72191,"byte_end":72216,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72217,"byte_end":72243,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72244,"byte_end":72249,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72250,"byte_end":72253,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72254,"byte_end":72284,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72285,"byte_end":72371,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72372,"byte_end":72401,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72402,"byte_end":72411,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72412,"byte_end":72467,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72468,"byte_end":72528,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72529,"byte_end":72538,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72539,"byte_end":72542,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72543,"byte_end":72631,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72632,"byte_end":72661,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72662,"byte_end":72671,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72672,"byte_end":72729,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72730,"byte_end":72792,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72793,"byte_end":72802,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72803,"byte_end":72806,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72807,"byte_end":72880,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72881,"byte_end":72938,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72939,"byte_end":72983,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72984,"byte_end":72993,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":72994,"byte_end":72999,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73000,"byte_end":73007,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73376,"byte_end":73384,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73031,"byte_end":73086,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73091,"byte_end":73094,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73099,"byte_end":73174,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73179,"byte_end":73254,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73259,"byte_end":73288,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73293,"byte_end":73296,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73301,"byte_end":73368,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73879,"byte_end":73889,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73515,"byte_end":73573,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73578,"byte_end":73581,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73586,"byte_end":73638,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73643,"byte_end":73707,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73712,"byte_end":73787,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73792,"byte_end":73795,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":73800,"byte_end":73871,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74375,"byte_end":74385,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74020,"byte_end":74077,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74082,"byte_end":74085,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74090,"byte_end":74142,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74147,"byte_end":74211,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74216,"byte_end":74283,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74288,"byte_end":74291,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74296,"byte_end":74367,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74505,"byte_end":74513,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"register","qualname":"<Box<T> as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74708,"byte_end":74718,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Box<T> as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74915,"byte_end":74925,"line_start":136,"line_end":136,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Box<T> as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/macros.rs","byte_start":10437,"byte_end":10460,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254350,"byte_end":14254376,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254377,"byte_end":14254380,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254381,"byte_end":14254454,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254455,"byte_end":14254533,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254534,"byte_end":14254612,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254613,"byte_end":14254644,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254645,"byte_end":14254648,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254649,"byte_end":14254710,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254711,"byte_end":14254714,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254715,"byte_end":14254726,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254727,"byte_end":14254730,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254731,"byte_end":14254810,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254811,"byte_end":14254891,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254892,"byte_end":14254971,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14254972,"byte_end":14255030,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255031,"byte_end":14255111,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255112,"byte_end":14255192,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255193,"byte_end":14255273,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255274,"byte_end":14255336,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255337,"byte_end":14255383,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255384,"byte_end":14255387,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255388,"byte_end":14255467,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255468,"byte_end":14255545,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255546,"byte_end":14255577,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255578,"byte_end":14255654,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/mod.rs","byte_start":14255655,"byte_end":14255717,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257447,"byte_end":14257458,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1190}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256648,"byte_end":14256692,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256693,"byte_end":14256696,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256697,"byte_end":14256711,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256712,"byte_end":14256715,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256819,"byte_end":14256847,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256848,"byte_end":14256895,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256896,"byte_end":14256941,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256942,"byte_end":14256972,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14256973,"byte_end":14257001,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257002,"byte_end":14257005,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257006,"byte_end":14257076,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257077,"byte_end":14257080,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257081,"byte_end":14257113,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257114,"byte_end":14257162,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257163,"byte_end":14257166,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257167,"byte_end":14257205,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257206,"byte_end":14257281,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257282,"byte_end":14257285,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257286,"byte_end":14257348,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257349,"byte_end":14257352,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257353,"byte_end":14257402,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257403,"byte_end":14257419,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257420,"byte_end":14257427,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257428,"byte_end":14257435,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257988,"byte_end":14257992,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257526,"byte_end":14257600,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257605,"byte_end":14257636,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257641,"byte_end":14257644,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257649,"byte_end":14257697,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257702,"byte_end":14257705,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257710,"byte_end":14257741,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257746,"byte_end":14257805,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257810,"byte_end":14257858,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257863,"byte_end":14257940,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257945,"byte_end":14257976,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259276,"byte_end":14259284,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14258926,"byte_end":14258993,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14258998,"byte_end":14259001,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259006,"byte_end":14259078,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259083,"byte_end":14259157,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259162,"byte_end":14259234,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259239,"byte_end":14259264,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259799,"byte_end":14259805,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259417,"byte_end":14259447,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259452,"byte_end":14259455,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259460,"byte_end":14259511,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259516,"byte_end":14259592,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259597,"byte_end":14259670,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259675,"byte_end":14259678,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259683,"byte_end":14259755,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14259760,"byte_end":14259787,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260071,"byte_end":14260081,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260005,"byte_end":14260059,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260345,"byte_end":14260352,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260160,"byte_end":14260218,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260223,"byte_end":14260226,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260231,"byte_end":14260307,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260312,"byte_end":14260333,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260622,"byte_end":14260625,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260433,"byte_end":14260491,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260496,"byte_end":14260499,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260504,"byte_end":14260570,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260575,"byte_end":14260578,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260583,"byte_end":14260610,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260943,"byte_end":14260953,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260690,"byte_end":14260748,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260753,"byte_end":14260756,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260761,"byte_end":14260835,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260840,"byte_end":14260916,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14260921,"byte_end":14260931,"line_start":133,"line_end":133,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261081,"byte_end":14261089,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"register","qualname":"<TcpListener as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261286,"byte_end":14261296,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"reregister","qualname":"<TcpListener as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261495,"byte_end":14261505,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"deregister","qualname":"<TcpListener as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261648,"byte_end":14261651,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TcpListener as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261792,"byte_end":14261803,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<TcpListener as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261927,"byte_end":14261936,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<TcpListener as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262230,"byte_end":14262241,"line_start":191,"line_end":191,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<TcpListener as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> TcpListener","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `TcpListener`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `TcpListener`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262045,"byte_end":14262087,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262092,"byte_end":14262095,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262100,"byte_end":14262111,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262116,"byte_end":14262119,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262124,"byte_end":14262188,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262193,"byte_end":14262215,"line_start":190,"line_end":190,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265216,"byte_end":14265225,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1283}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264184,"byte_end":14264257,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264258,"byte_end":14264261,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264262,"byte_end":14264318,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264319,"byte_end":14264322,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264323,"byte_end":14264337,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264338,"byte_end":14264341,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264445,"byte_end":14264491,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264492,"byte_end":14264520,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264521,"byte_end":14264526,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264527,"byte_end":14264574,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264575,"byte_end":14264628,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264629,"byte_end":14264676,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264677,"byte_end":14264722,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264723,"byte_end":14264751,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264752,"byte_end":14264780,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264781,"byte_end":14264784,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264785,"byte_end":14264850,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264851,"byte_end":14264854,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264855,"byte_end":14264887,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264888,"byte_end":14264936,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264937,"byte_end":14264940,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264941,"byte_end":14264979,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14264980,"byte_end":14265053,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265054,"byte_end":14265057,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265058,"byte_end":14265120,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265121,"byte_end":14265124,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265125,"byte_end":14265171,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265172,"byte_end":14265188,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265189,"byte_end":14265196,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265197,"byte_end":14265204,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266883,"byte_end":14266890,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265289,"byte_end":14265356,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265361,"byte_end":14265383,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265388,"byte_end":14265391,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265396,"byte_end":14265407,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265412,"byte_end":14265415,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265420,"byte_end":14265495,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265500,"byte_end":14265564,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265569,"byte_end":14265643,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265648,"byte_end":14265679,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265684,"byte_end":14265687,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265692,"byte_end":14265766,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265771,"byte_end":14265844,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265849,"byte_end":14265908,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265913,"byte_end":14266041,"line_start":66,"line_end":66,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266046,"byte_end":14266049,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266054,"byte_end":14266087,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [write interest].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266092,"byte_end":14266160,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/  3. Wait for a (writable) event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266165,"byte_end":14266201,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266206,"byte_end":14266280,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266285,"byte_end":14266360,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266365,"byte_end":14266439,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266444,"byte_end":14266515,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/     whent wrong.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266520,"byte_end":14266540,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266545,"byte_end":14266580,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266585,"byte_end":14266588,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266593,"byte_end":14266663,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266668,"byte_end":14266744,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266749,"byte_end":14266782,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266787,"byte_end":14266790,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [write interest]: Interest::WRITABLE","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266795,"byte_end":14266835,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14266840,"byte_end":14266871,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267780,"byte_end":14267788,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267229,"byte_end":14267292,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267297,"byte_end":14267300,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267305,"byte_end":14267375,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267380,"byte_end":14267454,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267459,"byte_end":14267530,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267535,"byte_end":14267557,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267562,"byte_end":14267565,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267570,"byte_end":14267580,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267585,"byte_end":14267588,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267593,"byte_end":14267660,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267665,"byte_end":14267737,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267742,"byte_end":14267768,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267996,"byte_end":14268005,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14267911,"byte_end":14267984,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268167,"byte_end":14268177,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268083,"byte_end":14268155,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268531,"byte_end":14268539,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268256,"byte_end":14268322,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268327,"byte_end":14268330,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268335,"byte_end":14268407,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268412,"byte_end":14268481,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268486,"byte_end":14268519,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269283,"byte_end":14269294,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268626,"byte_end":14268688,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268693,"byte_end":14268696,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268701,"byte_end":14268770,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268775,"byte_end":14268848,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268853,"byte_end":14268926,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14268931,"byte_end":14269006,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269011,"byte_end":14269029,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269034,"byte_end":14269037,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269042,"byte_end":14269053,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269058,"byte_end":14269061,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269066,"byte_end":14269142,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269147,"byte_end":14269214,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269219,"byte_end":14269271,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269831,"byte_end":14269838,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269388,"byte_end":14269450,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269455,"byte_end":14269458,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269463,"byte_end":14269533,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269538,"byte_end":14269541,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269546,"byte_end":14269577,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269582,"byte_end":14269585,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269590,"byte_end":14269601,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269606,"byte_end":14269609,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269614,"byte_end":14269690,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269695,"byte_end":14269762,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269767,"byte_end":14269819,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270331,"byte_end":14270338,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269908,"byte_end":14269966,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269971,"byte_end":14269974,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14269979,"byte_end":14270055,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270060,"byte_end":14270081,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270086,"byte_end":14270089,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270094,"byte_end":14270105,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270110,"byte_end":14270113,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270118,"byte_end":14270194,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270199,"byte_end":14270262,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270267,"byte_end":14270319,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270846,"byte_end":14270849,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270419,"byte_end":14270477,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270482,"byte_end":14270485,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270490,"byte_end":14270556,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270561,"byte_end":14270564,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270569,"byte_end":14270580,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270585,"byte_end":14270588,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270593,"byte_end":14270669,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270674,"byte_end":14270737,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270742,"byte_end":14270794,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270799,"byte_end":14270802,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270807,"byte_end":14270834,"line_start":187,"line_end":187,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271167,"byte_end":14271177,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270914,"byte_end":14270972,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270977,"byte_end":14270980,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14270985,"byte_end":14271059,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271064,"byte_end":14271140,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271145,"byte_end":14271155,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271615,"byte_end":14271619,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271263,"byte_end":14271333,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271338,"byte_end":14271407,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271412,"byte_end":14271451,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271456,"byte_end":14271459,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271464,"byte_end":14271538,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271543,"byte_end":14271603,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273624,"byte_end":14273630,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"try_io","qualname":"<TcpStream>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271706,"byte_end":14271780,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271785,"byte_end":14271823,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271828,"byte_end":14271831,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271836,"byte_end":14271847,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271852,"byte_end":14271855,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271860,"byte_end":14271930,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14271935,"byte_end":14272011,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272016,"byte_end":14272053,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272058,"byte_end":14272061,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272066,"byte_end":14272111,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272116,"byte_end":14272119,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272124,"byte_end":14272138,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272143,"byte_end":14272146,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272236,"byte_end":14272264,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272269,"byte_end":14272274,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272279,"byte_end":14272326,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272331,"byte_end":14272347,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272352,"byte_end":14272368,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272373,"byte_end":14272408,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272413,"byte_end":14272432,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272437,"byte_end":14272479,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272484,"byte_end":14272512,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272517,"byte_end":14272520,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272525,"byte_end":14272577,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272582,"byte_end":14272628,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272633,"byte_end":14272636,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272641,"byte_end":14272684,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272689,"byte_end":14272692,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272697,"byte_end":14272764,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272769,"byte_end":14272825,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272830,"byte_end":14272857,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ let n = stream.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272862,"byte_end":14272892,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272897,"byte_end":14272948,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272953,"byte_end":14272973,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(stream.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14272978,"byte_end":14273061,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273066,"byte_end":14273089,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(stream.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273094,"byte_end":14273245,"line_start":249,"line_end":249,"column_start":5,"column_end":156}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273250,"byte_end":14273272,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273277,"byte_end":14273305,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273310,"byte_end":14273326,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273331,"byte_end":14273404,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273409,"byte_end":14273457,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273462,"byte_end":14273505,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273510,"byte_end":14273519,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273524,"byte_end":14273532,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273537,"byte_end":14273571,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273576,"byte_end":14273588,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273593,"byte_end":14273600,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273605,"byte_end":14273612,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273797,"byte_end":14273801,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"read","qualname":"<TcpStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273920,"byte_end":14273933,"line_start":275,"line_end":275,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<TcpStream as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274111,"byte_end":14274115,"line_start":281,"line_end":281,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a TcpStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274234,"byte_end":14274247,"line_start":285,"line_end":285,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'a TcpStream as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274418,"byte_end":14274423,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"write","qualname":"<TcpStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274539,"byte_end":14274553,"line_start":295,"line_end":295,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<TcpStream as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274689,"byte_end":14274694,"line_start":299,"line_end":299,"column_start":8,"column_end":13},"name":"flush","qualname":"<TcpStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274829,"byte_end":14274834,"line_start":305,"line_end":305,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a TcpStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274950,"byte_end":14274964,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'a TcpStream as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275100,"byte_end":14275105,"line_start":313,"line_end":313,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a TcpStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275240,"byte_end":14275248,"line_start":319,"line_end":319,"column_start":8,"column_end":16},"name":"register","qualname":"<TcpStream as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275445,"byte_end":14275455,"line_start":328,"line_end":328,"column_start":8,"column_end":18},"name":"reregister","qualname":"<TcpStream as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275654,"byte_end":14275664,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"deregister","qualname":"<TcpStream as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275805,"byte_end":14275808,"line_start":343,"line_end":343,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TcpStream as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275947,"byte_end":14275958,"line_start":350,"line_end":350,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<TcpStream as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276080,"byte_end":14276089,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<TcpStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276379,"byte_end":14276390,"line_start":370,"line_end":370,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<TcpStream as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> TcpStream","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `TcpStream`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `TcpStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276196,"byte_end":14276236,"line_start":364,"line_end":364,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276241,"byte_end":14276244,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276249,"byte_end":14276260,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276265,"byte_end":14276268,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276273,"byte_end":14276337,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276342,"byte_end":14276364,"line_start":369,"line_end":369,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281128,"byte_end":14281137,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1401}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278490,"byte_end":14278526,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278527,"byte_end":14278530,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278531,"byte_end":14278611,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278612,"byte_end":14278692,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278693,"byte_end":14278720,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278721,"byte_end":14278724,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278725,"byte_end":14278739,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278740,"byte_end":14278743,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278847,"byte_end":14278875,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278876,"byte_end":14278881,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278882,"byte_end":14278929,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278930,"byte_end":14278953,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278954,"byte_end":14278987,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14278988,"byte_end":14279045,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279046,"byte_end":14279049,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279050,"byte_end":14279078,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279079,"byte_end":14279124,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279125,"byte_end":14279153,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279154,"byte_end":14279157,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279158,"byte_end":14279193,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279194,"byte_end":14279229,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279230,"byte_end":14279233,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279234,"byte_end":14279329,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279330,"byte_end":14279344,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279345,"byte_end":14279414,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279415,"byte_end":14279484,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279485,"byte_end":14279488,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279489,"byte_end":14279585,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279586,"byte_end":14279606,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279607,"byte_end":14279663,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279664,"byte_end":14279667,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279668,"byte_end":14279766,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279767,"byte_end":14279784,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279785,"byte_end":14279817,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279818,"byte_end":14279821,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279822,"byte_end":14279916,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279917,"byte_end":14279995,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14279996,"byte_end":14280074,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280075,"byte_end":14280078,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280079,"byte_end":14280108,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280109,"byte_end":14280137,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280138,"byte_end":14280141,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280142,"byte_end":14280190,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280191,"byte_end":14280201,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280202,"byte_end":14280268,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280269,"byte_end":14280305,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280306,"byte_end":14280339,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280340,"byte_end":14280398,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280399,"byte_end":14280426,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280427,"byte_end":14280498,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280499,"byte_end":14280545,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280546,"byte_end":14280627,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280628,"byte_end":14280646,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280647,"byte_end":14280702,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280703,"byte_end":14280730,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280731,"byte_end":14280799,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280800,"byte_end":14280868,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280869,"byte_end":14280905,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280906,"byte_end":14280979,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14280980,"byte_end":14281016,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281017,"byte_end":14281034,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281035,"byte_end":14281070,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281071,"byte_end":14281084,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281085,"byte_end":14281094,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281095,"byte_end":14281100,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281101,"byte_end":14281108,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281109,"byte_end":14281116,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282111,"byte_end":14282115,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281201,"byte_end":14281249,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281254,"byte_end":14281257,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281262,"byte_end":14281276,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281281,"byte_end":14281284,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281400,"byte_end":14281428,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281433,"byte_end":14281438,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281443,"byte_end":14281490,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281495,"byte_end":14281523,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281528,"byte_end":14281531,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281536,"byte_end":14281578,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281583,"byte_end":14281647,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281652,"byte_end":14281689,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281694,"byte_end":14281716,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281721,"byte_end":14281806,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281811,"byte_end":14281867,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281872,"byte_end":14281881,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281886,"byte_end":14281892,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281897,"byte_end":14281900,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281905,"byte_end":14281992,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281997,"byte_end":14282055,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282060,"byte_end":14282075,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282080,"byte_end":14282087,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282092,"byte_end":14282099,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282566,"byte_end":14282574,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282226,"byte_end":14282289,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282294,"byte_end":14282297,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282302,"byte_end":14282372,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282377,"byte_end":14282451,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282456,"byte_end":14282527,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282532,"byte_end":14282554,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283528,"byte_end":14283538,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282697,"byte_end":14282762,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282767,"byte_end":14282770,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282775,"byte_end":14282789,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14282794,"byte_end":14282797,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283195,"byte_end":14283223,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283228,"byte_end":14283233,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283238,"byte_end":14283285,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283290,"byte_end":14283318,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283323,"byte_end":14283326,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283331,"byte_end":14283369,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283374,"byte_end":14283414,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283419,"byte_end":14283472,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283477,"byte_end":14283492,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283497,"byte_end":14283504,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283509,"byte_end":14283516,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284272,"byte_end":14284281,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283617,"byte_end":14283696,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283701,"byte_end":14283704,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283709,"byte_end":14283723,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283728,"byte_end":14283731,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283847,"byte_end":14283875,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283880,"byte_end":14283885,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283890,"byte_end":14283937,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283942,"byte_end":14283970,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283975,"byte_end":14283978,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14283983,"byte_end":14284021,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284026,"byte_end":14284073,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284078,"byte_end":14284118,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284123,"byte_end":14284154,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284159,"byte_end":14284216,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284221,"byte_end":14284236,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284241,"byte_end":14284248,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284253,"byte_end":14284260,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285162,"byte_end":14285169,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284359,"byte_end":14284433,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284438,"byte_end":14284466,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284471,"byte_end":14284474,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284479,"byte_end":14284552,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284557,"byte_end":14284597,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284602,"byte_end":14284605,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284610,"byte_end":14284624,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284629,"byte_end":14284632,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284637,"byte_end":14284650,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284655,"byte_end":14284683,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284688,"byte_end":14284735,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284740,"byte_end":14284768,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284773,"byte_end":14284776,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284781,"byte_end":14284839,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284844,"byte_end":14284847,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284852,"byte_end":14284922,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284927,"byte_end":14284974,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284979,"byte_end":14284982,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14284987,"byte_end":14285061,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285066,"byte_end":14285096,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285101,"byte_end":14285106,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285111,"byte_end":14285126,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285131,"byte_end":14285138,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285143,"byte_end":14285150,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286470,"byte_end":14286479,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285304,"byte_end":14285378,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285383,"byte_end":14285434,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285439,"byte_end":14285442,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285447,"byte_end":14285458,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285463,"byte_end":14285466,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285471,"byte_end":14285546,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285551,"byte_end":14285629,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285634,"byte_end":14285682,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285687,"byte_end":14285754,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285759,"byte_end":14285827,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285832,"byte_end":14285835,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285840,"byte_end":14285854,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285859,"byte_end":14285862,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285867,"byte_end":14285880,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285885,"byte_end":14285913,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285918,"byte_end":14285923,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285928,"byte_end":14285975,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14285980,"byte_end":14286008,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286013,"byte_end":14286016,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286021,"byte_end":14286079,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286084,"byte_end":14286087,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286092,"byte_end":14286164,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286169,"byte_end":14286216,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286221,"byte_end":14286224,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286229,"byte_end":14286254,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286259,"byte_end":14286319,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286324,"byte_end":14286404,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286409,"byte_end":14286414,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286419,"byte_end":14286434,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286439,"byte_end":14286446,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286451,"byte_end":14286458,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287822,"byte_end":14287831,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286606,"byte_end":14286682,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286687,"byte_end":14286763,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286768,"byte_end":14286786,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286791,"byte_end":14286794,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286799,"byte_end":14286810,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286815,"byte_end":14286818,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286823,"byte_end":14286898,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286903,"byte_end":14286981,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14286986,"byte_end":14287034,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287039,"byte_end":14287106,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287111,"byte_end":14287179,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287184,"byte_end":14287187,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287192,"byte_end":14287206,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287211,"byte_end":14287214,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287219,"byte_end":14287232,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287237,"byte_end":14287265,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287270,"byte_end":14287275,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287280,"byte_end":14287327,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287332,"byte_end":14287360,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287365,"byte_end":14287368,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287373,"byte_end":14287431,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287436,"byte_end":14287439,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287444,"byte_end":14287516,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287521,"byte_end":14287568,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287573,"byte_end":14287576,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287581,"byte_end":14287606,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287611,"byte_end":14287671,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287676,"byte_end":14287756,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287761,"byte_end":14287766,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287771,"byte_end":14287786,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287791,"byte_end":14287798,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287803,"byte_end":14287810,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288102,"byte_end":14288106,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14287958,"byte_end":14288045,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288050,"byte_end":14288090,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288730,"byte_end":14288734,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288210,"byte_end":14288296,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288301,"byte_end":14288330,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288335,"byte_end":14288338,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288343,"byte_end":14288354,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288359,"byte_end":14288362,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288367,"byte_end":14288442,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288447,"byte_end":14288520,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288525,"byte_end":14288573,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288578,"byte_end":14288645,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288650,"byte_end":14288718,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289372,"byte_end":14289376,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288842,"byte_end":14288918,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288923,"byte_end":14288972,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288977,"byte_end":14288980,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14288985,"byte_end":14288996,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289001,"byte_end":14289004,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289009,"byte_end":14289084,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289089,"byte_end":14289162,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289167,"byte_end":14289215,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289220,"byte_end":14289287,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289292,"byte_end":14289360,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289870,"byte_end":14289877,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289484,"byte_end":14289556,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289561,"byte_end":14289637,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289642,"byte_end":14289656,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289661,"byte_end":14289664,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289669,"byte_end":14289739,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289744,"byte_end":14289820,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289825,"byte_end":14289858,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290731,"byte_end":14290744,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14289967,"byte_end":14290031,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290036,"byte_end":14290039,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290044,"byte_end":14290115,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290120,"byte_end":14290132,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290137,"byte_end":14290140,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290145,"byte_end":14290159,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290164,"byte_end":14290167,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290283,"byte_end":14290311,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290316,"byte_end":14290321,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290326,"byte_end":14290373,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290378,"byte_end":14290406,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290411,"byte_end":14290414,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290419,"byte_end":14290487,"line_start":345,"line_end":345,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290492,"byte_end":14290539,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290544,"byte_end":14290590,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290595,"byte_end":14290600,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290605,"byte_end":14290608,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290613,"byte_end":14290665,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290670,"byte_end":14290675,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290680,"byte_end":14290695,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290700,"byte_end":14290707,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290712,"byte_end":14290719,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291512,"byte_end":14291521,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290830,"byte_end":14290894,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290899,"byte_end":14290902,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290907,"byte_end":14290954,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290959,"byte_end":14290987,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14290992,"byte_end":14290995,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291000,"byte_end":14291033,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291038,"byte_end":14291041,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291046,"byte_end":14291060,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291065,"byte_end":14291068,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291184,"byte_end":14291212,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291217,"byte_end":14291222,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291227,"byte_end":14291274,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291279,"byte_end":14291307,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291312,"byte_end":14291315,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291320,"byte_end":14291388,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291393,"byte_end":14291446,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291451,"byte_end":14291456,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291461,"byte_end":14291476,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291481,"byte_end":14291488,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291493,"byte_end":14291500,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291825,"byte_end":14291846,"line_start":389,"line_end":389,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291593,"byte_end":14291662,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291667,"byte_end":14291670,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291675,"byte_end":14291749,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291754,"byte_end":14291813,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292176,"byte_end":14292193,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14291940,"byte_end":14292009,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292014,"byte_end":14292017,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292022,"byte_end":14292069,"line_start":395,"line_end":395,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292074,"byte_end":14292110,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292115,"byte_end":14292118,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292123,"byte_end":14292164,"line_start":398,"line_end":398,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292654,"byte_end":14292674,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292273,"byte_end":14292341,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292346,"byte_end":14292349,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292354,"byte_end":14292424,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292429,"byte_end":14292503,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292508,"byte_end":14292570,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292575,"byte_end":14292578,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292583,"byte_end":14292642,"line_start":409,"line_end":409,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293001,"byte_end":14293017,"line_start":420,"line_end":420,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292768,"byte_end":14292836,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292841,"byte_end":14292844,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292849,"byte_end":14292896,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292901,"byte_end":14292936,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292941,"byte_end":14292944,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14292949,"byte_end":14292989,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293331,"byte_end":14293352,"line_start":428,"line_end":428,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293095,"byte_end":14293166,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293171,"byte_end":14293174,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293179,"byte_end":14293255,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293260,"byte_end":14293319,"line_start":427,"line_end":427,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293684,"byte_end":14293701,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293446,"byte_end":14293517,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293522,"byte_end":14293525,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293530,"byte_end":14293577,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293582,"byte_end":14293618,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293623,"byte_end":14293626,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293631,"byte_end":14293672,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294490,"byte_end":14294497,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293781,"byte_end":14293839,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293844,"byte_end":14293847,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293852,"byte_end":14293928,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293933,"byte_end":14293954,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293959,"byte_end":14293962,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293967,"byte_end":14293981,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14293986,"byte_end":14293989,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294105,"byte_end":14294133,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294138,"byte_end":14294143,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294148,"byte_end":14294195,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294200,"byte_end":14294228,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294233,"byte_end":14294236,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294241,"byte_end":14294299,"line_start":456,"line_end":456,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294304,"byte_end":14294332,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294337,"byte_end":14294366,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294371,"byte_end":14294376,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294381,"byte_end":14294384,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294389,"byte_end":14294424,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294429,"byte_end":14294434,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294439,"byte_end":14294454,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294459,"byte_end":14294466,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294471,"byte_end":14294478,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295244,"byte_end":14295247,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294578,"byte_end":14294636,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294641,"byte_end":14294644,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294649,"byte_end":14294715,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294720,"byte_end":14294723,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294728,"byte_end":14294755,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294760,"byte_end":14294763,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294768,"byte_end":14294782,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294787,"byte_end":14294790,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294906,"byte_end":14294934,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294939,"byte_end":14294944,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14294949,"byte_end":14294996,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295001,"byte_end":14295029,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295034,"byte_end":14295037,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295042,"byte_end":14295100,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295105,"byte_end":14295130,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295135,"byte_end":14295138,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295143,"byte_end":14295178,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295183,"byte_end":14295188,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295193,"byte_end":14295208,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295213,"byte_end":14295220,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295225,"byte_end":14295232,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295791,"byte_end":14295808,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295312,"byte_end":14295370,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295375,"byte_end":14295378,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295383,"byte_end":14295457,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295462,"byte_end":14295535,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295540,"byte_end":14295612,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295617,"byte_end":14295687,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295692,"byte_end":14295730,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295735,"byte_end":14295779,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296315,"byte_end":14296332,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14295950,"byte_end":14296010,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296015,"byte_end":14296018,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296023,"byte_end":14296097,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296102,"byte_end":14296175,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296180,"byte_end":14296254,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296259,"byte_end":14296303,"line_start":514,"line_end":514,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296735,"byte_end":14296753,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296468,"byte_end":14296527,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296532,"byte_end":14296535,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296540,"byte_end":14296587,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296592,"byte_end":14296624,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296629,"byte_end":14296632,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296637,"byte_end":14296674,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296679,"byte_end":14296723,"line_start":525,"line_end":525,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297165,"byte_end":14297183,"line_start":537,"line_end":537,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296896,"byte_end":14296957,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296962,"byte_end":14296965,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14296970,"byte_end":14297017,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297022,"byte_end":14297054,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297059,"byte_end":14297062,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297067,"byte_end":14297104,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297109,"byte_end":14297153,"line_start":536,"line_end":536,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297442,"byte_end":14297449,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297320,"byte_end":14297381,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297386,"byte_end":14297430,"line_start":542,"line_end":542,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297782,"byte_end":14297792,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297529,"byte_end":14297587,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297592,"byte_end":14297595,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297600,"byte_end":14297674,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297679,"byte_end":14297755,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297760,"byte_end":14297770,"line_start":551,"line_end":551,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299787,"byte_end":14299793,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UdpSocket>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297878,"byte_end":14297952,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14297957,"byte_end":14297995,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298000,"byte_end":14298003,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298008,"byte_end":14298019,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298024,"byte_end":14298027,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298032,"byte_end":14298102,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298107,"byte_end":14298183,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298188,"byte_end":14298225,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298230,"byte_end":14298233,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298238,"byte_end":14298283,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298288,"byte_end":14298291,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298296,"byte_end":14298310,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298315,"byte_end":14298318,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298408,"byte_end":14298436,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298441,"byte_end":14298446,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298451,"byte_end":14298498,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298503,"byte_end":14298519,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298524,"byte_end":14298540,"line_start":575,"line_end":575,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298545,"byte_end":14298580,"line_start":576,"line_end":576,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298585,"byte_end":14298604,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298609,"byte_end":14298651,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298656,"byte_end":14298684,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298689,"byte_end":14298692,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298697,"byte_end":14298749,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/ let dgram = UdpSocket::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298754,"byte_end":14298796,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298801,"byte_end":14298804,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298809,"byte_end":14298851,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298856,"byte_end":14298859,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298864,"byte_end":14298930,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298935,"byte_end":14298991,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14298996,"byte_end":14299023,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let n = dgram.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299028,"byte_end":14299057,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299062,"byte_end":14299113,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299118,"byte_end":14299138,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(dgram.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299143,"byte_end":14299225,"line_start":592,"line_end":592,"column_start":5,"column_end":87}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299230,"byte_end":14299253,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(dgram.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299258,"byte_end":14299408,"line_start":594,"line_end":594,"column_start":5,"column_end":155}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299413,"byte_end":14299435,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299440,"byte_end":14299468,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299473,"byte_end":14299489,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299494,"byte_end":14299567,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299572,"byte_end":14299620,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299625,"byte_end":14299668,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299673,"byte_end":14299682,"line_start":601,"line_end":601,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299687,"byte_end":14299695,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299700,"byte_end":14299734,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299739,"byte_end":14299751,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299756,"byte_end":14299763,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299768,"byte_end":14299775,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299969,"byte_end":14299977,"line_start":616,"line_end":616,"column_start":8,"column_end":16},"name":"register","qualname":"<UdpSocket as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300174,"byte_end":14300184,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UdpSocket as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300383,"byte_end":14300393,"line_start":634,"line_end":634,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UdpSocket as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300534,"byte_end":14300537,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UdpSocket as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300676,"byte_end":14300687,"line_start":647,"line_end":647,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UdpSocket as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300809,"byte_end":14300818,"line_start":654,"line_end":654,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UdpSocket as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14301108,"byte_end":14301119,"line_start":667,"line_end":667,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UdpSocket as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UdpSocket","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `UdpSocket`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UdpSocket`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300925,"byte_end":14300965,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300970,"byte_end":14300973,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300978,"byte_end":14300989,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300994,"byte_end":14300997,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14301002,"byte_end":14301066,"line_start":665,"line_end":665,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14301071,"byte_end":14301093,"line_start":666,"line_end":666,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302333,"byte_end":14302345,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1506}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302294,"byte_end":14302321,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302486,"byte_end":14302490,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302415,"byte_end":14302474,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302984,"byte_end":14302992,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302633,"byte_end":14302702,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302707,"byte_end":14302710,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302715,"byte_end":14302788,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302793,"byte_end":14302867,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; it is left up to the user to set it in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302872,"byte_end":14302945,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302950,"byte_end":14302972,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303309,"byte_end":14303316,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn connect<P>(&Self, P) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303124,"byte_end":14303173,"line_start":33,"line_end":33,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303178,"byte_end":14303181,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303186,"byte_end":14303256,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303261,"byte_end":14303297,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303494,"byte_end":14303501,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303413,"byte_end":14303482,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303671,"byte_end":14303675,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303611,"byte_end":14303659,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303985,"byte_end":14303995,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14303934,"byte_end":14303973,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304229,"byte_end":14304238,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304099,"byte_end":14304145,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304150,"byte_end":14304153,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304158,"byte_end":14304217,"line_start":63,"line_end":63,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304499,"byte_end":14304508,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304341,"byte_end":14304375,"line_start":68,"line_end":68,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304380,"byte_end":14304383,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304388,"byte_end":14304457,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304462,"byte_end":14304487,"line_start":71,"line_end":71,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304782,"byte_end":14304786,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304674,"byte_end":14304708,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304713,"byte_end":14304716,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304721,"byte_end":14304770,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305025,"byte_end":14305032,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn send_to<P>(&Self, &[u8], P) -> io::Result<usize> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304894,"byte_end":14304948,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304953,"byte_end":14304956,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14304961,"byte_end":14305013,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305457,"byte_end":14305461,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305170,"byte_end":14305220,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305225,"byte_end":14305228,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305233,"byte_end":14305305,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305310,"byte_end":14305380,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305385,"byte_end":14305388,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305393,"byte_end":14305445,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305624,"byte_end":14305634,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305565,"byte_end":14305612,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306000,"byte_end":14306008,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305720,"byte_end":14305785,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305790,"byte_end":14305793,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305798,"byte_end":14305866,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305871,"byte_end":14305941,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14305946,"byte_end":14305988,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308315,"byte_end":14308321,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixDatagram>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306095,"byte_end":14306169,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306174,"byte_end":14306212,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306217,"byte_end":14306220,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306225,"byte_end":14306236,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306241,"byte_end":14306244,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306249,"byte_end":14306319,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306324,"byte_end":14306400,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306405,"byte_end":14306442,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306447,"byte_end":14306450,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306455,"byte_end":14306500,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306505,"byte_end":14306508,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306513,"byte_end":14306527,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306532,"byte_end":14306535,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306540,"byte_end":14306547,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306552,"byte_end":14306580,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306585,"byte_end":14306590,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306595,"byte_end":14306642,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306647,"byte_end":14306663,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306668,"byte_end":14306703,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixDatagram;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306708,"byte_end":14306739,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306744,"byte_end":14306747,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let (dgram1, dgram2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306752,"byte_end":14306801,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306806,"byte_end":14306809,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is writable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306814,"byte_end":14306856,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306861,"byte_end":14306864,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // Write to the dgram using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306869,"byte_end":14306934,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14306939,"byte_end":14306996,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307001,"byte_end":14307024,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ let n = dgram1.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307029,"byte_end":14307059,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307064,"byte_end":14307115,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(dgram1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307120,"byte_end":14307203,"line_start":145,"line_end":145,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307208,"byte_end":14307230,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307235,"byte_end":14307263,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307268,"byte_end":14307284,"line_start":148,"line_end":148,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307289,"byte_end":14307362,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307367,"byte_end":14307415,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307420,"byte_end":14307463,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307468,"byte_end":14307477,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307482,"byte_end":14307490,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307495,"byte_end":14307530,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307535,"byte_end":14307538,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307543,"byte_end":14307585,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307590,"byte_end":14307593,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307598,"byte_end":14307664,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307669,"byte_end":14307725,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307730,"byte_end":14307757,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ let n = dgram2.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307762,"byte_end":14307792,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307797,"byte_end":14307848,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(dgram2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307853,"byte_end":14307936,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307941,"byte_end":14307963,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14307968,"byte_end":14307996,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308001,"byte_end":14308017,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308022,"byte_end":14308095,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308100,"byte_end":14308148,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308153,"byte_end":14308196,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308201,"byte_end":14308210,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308215,"byte_end":14308223,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308228,"byte_end":14308262,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308267,"byte_end":14308279,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308284,"byte_end":14308291,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308296,"byte_end":14308303,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308500,"byte_end":14308508,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixDatagram as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308705,"byte_end":14308715,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixDatagram as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308914,"byte_end":14308924,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixDatagram as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309068,"byte_end":14309071,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixDatagram as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309200,"byte_end":14309211,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309323,"byte_end":14309332,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309615,"byte_end":14309626,"line_start":233,"line_end":233,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixDatagram","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `UnixDatagram`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixDatagram`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309429,"byte_end":14309472,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309477,"byte_end":14309480,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309485,"byte_end":14309496,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309501,"byte_end":14309504,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309509,"byte_end":14309573,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309578,"byte_end":14309600,"line_start":232,"line_end":232,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310037,"byte_end":14310049,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1602}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14309980,"byte_end":14310025,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310194,"byte_end":14310198,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310119,"byte_end":14310182,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310692,"byte_end":14310700,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310341,"byte_end":14310410,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310415,"byte_end":14310418,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310423,"byte_end":14310496,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310501,"byte_end":14310575,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310580,"byte_end":14310653,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310658,"byte_end":14310680,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311015,"byte_end":14311021,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310836,"byte_end":14310891,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310896,"byte_end":14310899,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310904,"byte_end":14310976,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310981,"byte_end":14311003,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311196,"byte_end":14311206,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311130,"byte_end":14311184,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311369,"byte_end":14311379,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311310,"byte_end":14311357,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311508,"byte_end":14311516,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixListener as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311713,"byte_end":14311723,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixListener as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311922,"byte_end":14311932,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixListener as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312076,"byte_end":14312079,"line_start":77,"line_end":77,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixListener as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312208,"byte_end":14312219,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixListener as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312331,"byte_end":14312340,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixListener as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312623,"byte_end":14312634,"line_start":101,"line_end":101,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixListener as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixListener","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `UnixListener`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixListener`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312437,"byte_end":14312480,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312485,"byte_end":14312488,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312493,"byte_end":14312504,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312509,"byte_end":14312512,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312517,"byte_end":14312581,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312586,"byte_end":14312608,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313069,"byte_end":14313079,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1687}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313019,"byte_end":14313057,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313362,"byte_end":14313369,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"fn connect<P>(P) -> io::Result<UnixStream> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313145,"byte_end":14313188,"line_start":17,"line_end":17,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313193,"byte_end":14313196,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313201,"byte_end":14313271,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately. Usually it means the backlog is full.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313276,"byte_end":14313350,"line_start":20,"line_end":20,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314064,"byte_end":14314072,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313509,"byte_end":14313574,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313579,"byte_end":14313582,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313587,"byte_end":14313658,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313663,"byte_end":14313737,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313742,"byte_end":14313813,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313818,"byte_end":14313840,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313845,"byte_end":14313848,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313853,"byte_end":14313863,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313868,"byte_end":14313871,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313876,"byte_end":14313944,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313949,"byte_end":14314021,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314026,"byte_end":14314052,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314336,"byte_end":14314340,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314198,"byte_end":14314247,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314252,"byte_end":14314255,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314260,"byte_end":14314324,"line_start":45,"line_end":45,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314622,"byte_end":14314632,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314542,"byte_end":14314610,"line_start":52,"line_end":52,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314815,"byte_end":14314824,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314734,"byte_end":14314803,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314984,"byte_end":14314994,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14314925,"byte_end":14314972,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315361,"byte_end":14315369,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315080,"byte_end":14315146,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315151,"byte_end":14315154,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315159,"byte_end":14315227,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315232,"byte_end":14315302,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315307,"byte_end":14315349,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317682,"byte_end":14317688,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixStream>::try_io","value":"fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315456,"byte_end":14315530,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315535,"byte_end":14315573,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315578,"byte_end":14315581,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315586,"byte_end":14315597,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315602,"byte_end":14315605,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315610,"byte_end":14315680,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315685,"byte_end":14315761,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315766,"byte_end":14315803,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315808,"byte_end":14315811,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315816,"byte_end":14315861,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315866,"byte_end":14315869,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315874,"byte_end":14315888,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315893,"byte_end":14315896,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315901,"byte_end":14315908,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315913,"byte_end":14315941,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315946,"byte_end":14315951,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14315956,"byte_end":14316003,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316008,"byte_end":14316024,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316029,"byte_end":14316064,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixStream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316069,"byte_end":14316098,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316103,"byte_end":14316106,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let (stream1, stream2) = UnixStream::pair()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316111,"byte_end":14316160,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316165,"byte_end":14316168,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316173,"byte_end":14316216,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316221,"byte_end":14316224,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Write to the stream using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316229,"byte_end":14316295,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316300,"byte_end":14316357,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316362,"byte_end":14316385,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let n = stream1.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316390,"byte_end":14316421,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316426,"byte_end":14316477,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(stream1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316482,"byte_end":14316566,"line_start":106,"line_end":106,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316571,"byte_end":14316593,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316598,"byte_end":14316626,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316631,"byte_end":14316647,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316652,"byte_end":14316725,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316730,"byte_end":14316778,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316783,"byte_end":14316826,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316831,"byte_end":14316840,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316845,"byte_end":14316853,"line_start":114,"line_end":114,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316858,"byte_end":14316893,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316898,"byte_end":14316901,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316906,"byte_end":14316949,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316954,"byte_end":14316957,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14316962,"byte_end":14317029,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317034,"byte_end":14317090,"line_start":120,"line_end":120,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317095,"byte_end":14317122,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/ let n = stream2.try_io(|| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317127,"byte_end":14317158,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317163,"byte_end":14317214,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(stream2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317219,"byte_end":14317303,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317308,"byte_end":14317330,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317335,"byte_end":14317363,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317368,"byte_end":14317384,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317389,"byte_end":14317462,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317467,"byte_end":14317515,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317520,"byte_end":14317563,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317568,"byte_end":14317577,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317582,"byte_end":14317590,"line_start":132,"line_end":132,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317595,"byte_end":14317629,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317634,"byte_end":14317646,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317651,"byte_end":14317658,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317663,"byte_end":14317670,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317856,"byte_end":14317860,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"read","qualname":"<UnixStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317979,"byte_end":14317992,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<UnixStream as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318171,"byte_end":14318175,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a UnixStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318294,"byte_end":14318307,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'a UnixStream as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318479,"byte_end":14318484,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"write","qualname":"<UnixStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318600,"byte_end":14318614,"line_start":170,"line_end":170,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<UnixStream as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318750,"byte_end":14318755,"line_start":174,"line_end":174,"column_start":8,"column_end":13},"name":"flush","qualname":"<UnixStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318891,"byte_end":14318896,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a UnixStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319012,"byte_end":14319026,"line_start":184,"line_end":184,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'a UnixStream as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319162,"byte_end":14319167,"line_start":188,"line_end":188,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a UnixStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319303,"byte_end":14319311,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixStream as event::source::Source>::register","value":"fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319508,"byte_end":14319518,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixStream as event::source::Source>::reregister","value":"fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319717,"byte_end":14319727,"line_start":212,"line_end":212,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixStream as event::source::Source>::deregister","value":"fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319869,"byte_end":14319872,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixStream as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319999,"byte_end":14320010,"line_start":224,"line_end":224,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixStream as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6522},"children":[],"decl_id":{"krate":1,"index":6523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320120,"byte_end":14320129,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6518},"children":[],"decl_id":{"krate":1,"index":6519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320408,"byte_end":14320419,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixStream as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixStream","parent":{"krate":1,"index":6520},"children":[],"decl_id":{"krate":1,"index":6521},"docs":" Converts a `RawFd` to a `UnixStream`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320224,"byte_end":14320265,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320270,"byte_end":14320273,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320278,"byte_end":14320289,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320294,"byte_end":14320297,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320302,"byte_end":14320366,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320371,"byte_end":14320393,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1717,"byte_end":1721,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1610,"byte_end":1647,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1728,"byte_end":1753,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1767,"byte_end":1771,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1782,"byte_end":1796,"line_start":78,"line_end":78,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1805,"byte_end":1808,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1817,"byte_end":1864,"line_start":80,"line_end":80,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2184,"byte_end":2192,"line_start":96,"line_end":96,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2199,"byte_end":2229,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2242,"byte_end":2300,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2459,"byte_end":2462,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation that `panic!`s the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2467,"byte_end":2541,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2546,"byte_end":2615,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2620,"byte_end":2668,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2673,"byte_end":2676,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2681,"byte_end":2738,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2901,"byte_end":2977,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":2982,"byte_end":3030,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3197,"byte_end":3269,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":262},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3281,"byte_end":3286,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3293,"byte_end":3321,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3326,"byte_end":3329,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3334,"byte_end":3375,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3388,"byte_end":3445,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3450,"byte_end":3484,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3489,"byte_end":3517,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3530,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3610,"byte_end":3660,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3665,"byte_end":3668,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3673,"byte_end":3709,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3722,"byte_end":3797,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3802,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3883,"byte_end":3933,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3946,"byte_end":3979,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":3984,"byte_end":4027,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4032,"byte_end":4035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4153,"byte_end":4183,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4188,"byte_end":4228,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4233,"byte_end":4286,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4291,"byte_end":4319,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4324,"byte_end":4396,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4401,"byte_end":4429,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4434,"byte_end":4478,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4483,"byte_end":4510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4515,"byte_end":4527,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4532,"byte_end":4539,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4544,"byte_end":4551,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4556,"byte_end":4559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4564,"byte_end":4633,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4638,"byte_end":4708,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4713,"byte_end":4787,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4792,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4823,"byte_end":4826,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4831,"byte_end":4882,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4887,"byte_end":4890,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4895,"byte_end":4929,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4934,"byte_end":4937,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":4942,"byte_end":5018,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5023,"byte_end":5097,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5102,"byte_end":5182,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5187,"byte_end":5262,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5267,"byte_end":5335,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5340,"byte_end":5352,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5357,"byte_end":5360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5365,"byte_end":5441,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5446,"byte_end":5517,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5530,"byte_end":5576,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5581,"byte_end":5584,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5746,"byte_end":5778,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5783,"byte_end":5822,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5827,"byte_end":5867,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5872,"byte_end":5902,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5907,"byte_end":5958,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":5963,"byte_end":6018,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6023,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6079,"byte_end":6082,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6087,"byte_end":6164,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6169,"byte_end":6247,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6252,"byte_end":6268,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6273,"byte_end":6308,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6313,"byte_end":6386,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6391,"byte_end":6403,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6408,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6420,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6432,"byte_end":6435,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6440,"byte_end":6512,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6517,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6561,"byte_end":6564,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6569,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6639,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6677,"byte_end":6680,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6685,"byte_end":6755,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6760,"byte_end":6836,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6841,"byte_end":6916,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":6921,"byte_end":6995,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7000,"byte_end":7075,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7080,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7094,"byte_end":7097,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7102,"byte_end":7176,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7181,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7201,"byte_end":7204,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7209,"byte_end":7252,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7257,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7309,"byte_end":7312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7474,"byte_end":7492,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7497,"byte_end":7527,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7532,"byte_end":7564,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7569,"byte_end":7616,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7621,"byte_end":7656,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7661,"byte_end":7695,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7700,"byte_end":7750,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7755,"byte_end":7806,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7811,"byte_end":7864,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7869,"byte_end":7906,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7911,"byte_end":7986,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":7991,"byte_end":8019,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8024,"byte_end":8034,"line_start":231,"line_end":231,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8039,"byte_end":8107,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8112,"byte_end":8178,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8191,"byte_end":8221,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8226,"byte_end":8262,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8267,"byte_end":8342,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8347,"byte_end":8400,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8405,"byte_end":8438,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8443,"byte_end":8475,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8480,"byte_end":8557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8562,"byte_end":8609,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8614,"byte_end":8659,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8664,"byte_end":8718,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8723,"byte_end":8798,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8803,"byte_end":8848,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8853,"byte_end":8879,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8884,"byte_end":8961,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":8966,"byte_end":9037,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9042,"byte_end":9081,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9086,"byte_end":9152,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9157,"byte_end":9209,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9214,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9240,"byte_end":9257,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9262,"byte_end":9298,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9303,"byte_end":9316,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9321,"byte_end":9330,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9335,"byte_end":9357,"line_start":258,"line_end":258,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9362,"byte_end":9367,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9372,"byte_end":9375,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9380,"byte_end":9425,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9430,"byte_end":9477,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9482,"byte_end":9487,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9492,"byte_end":9499,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":9504,"byte_end":9511,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34178,"byte_end":34182,"line_start":416,"line_end":416,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34283,"byte_end":34287,"line_start":422,"line_end":422,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34411,"byte_end":34419,"line_start":428,"line_end":428,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44688,"byte_end":44696,"line_start":694,"line_end":694,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44849,"byte_end":44857,"line_start":701,"line_end":701,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14169162,"byte_end":14169170,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14177963,"byte_end":14177971,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178066,"byte_end":14178074,"line_start":303,"line_end":303,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178151,"byte_end":14178159,"line_start":309,"line_end":309,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178387,"byte_end":14178393,"line_start":320,"line_end":320,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178519,"byte_end":14178525,"line_start":326,"line_end":326,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178648,"byte_end":14178654,"line_start":334,"line_end":334,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14179126,"byte_end":14179132,"line_start":345,"line_end":345,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14179157,"byte_end":14179163,"line_start":346,"line_end":346,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193162,"byte_end":14193170,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/waker.rs","byte_start":14196770,"byte_end":14196775,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/net.rs","byte_start":14202443,"byte_end":14202458,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217761,"byte_end":14217771,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14218700,"byte_end":14218710,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14220742,"byte_end":14220752,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14221132,"byte_end":14221144,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/mod.rs","byte_start":14165530,"byte_end":14165543,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234710,"byte_end":14234716,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237300,"byte_end":14237306,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237857,"byte_end":14237863,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238753,"byte_end":14238759,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238970,"byte_end":14238976,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239138,"byte_end":14239144,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239241,"byte_end":14239247,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239509,"byte_end":14239517,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242103,"byte_end":14242111,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242661,"byte_end":14242669,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243365,"byte_end":14243373,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243672,"byte_end":14243680,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243899,"byte_end":14243907,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244073,"byte_end":14244081,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244178,"byte_end":14244186,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55322,"byte_end":55327,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56425,"byte_end":56430,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":63598,"byte_end":63603,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":64312,"byte_end":64324,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66687,"byte_end":66693,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69809,"byte_end":69813,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":70289,"byte_end":70295,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74459,"byte_end":74462,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14246961,"byte_end":14246969,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248269,"byte_end":14248277,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248544,"byte_end":14248552,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248681,"byte_end":14248689,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14251573,"byte_end":14251581,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14251886,"byte_end":14251896,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14254194,"byte_end":14254204,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257508,"byte_end":14257519,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261060,"byte_end":14261071,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261627,"byte_end":14261638,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261771,"byte_end":14261782,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261906,"byte_end":14261917,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262027,"byte_end":14262038,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265273,"byte_end":14265282,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273778,"byte_end":14273787,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274399,"byte_end":14274408,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275221,"byte_end":14275230,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275786,"byte_end":14275795,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275928,"byte_end":14275937,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276061,"byte_end":14276070,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276180,"byte_end":14276189,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281185,"byte_end":14281194,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299950,"byte_end":14299959,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300515,"byte_end":14300524,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300657,"byte_end":14300666,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300790,"byte_end":14300799,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300909,"byte_end":14300918,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302396,"byte_end":14302408,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308478,"byte_end":14308490,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309046,"byte_end":14309058,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309178,"byte_end":14309190,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309301,"byte_end":14309313,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309410,"byte_end":14309422,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310100,"byte_end":14310112,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311486,"byte_end":14311498,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312054,"byte_end":14312066,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312186,"byte_end":14312198,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312309,"byte_end":14312321,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312418,"byte_end":14312430,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313128,"byte_end":14313138,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317836,"byte_end":14317846,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318459,"byte_end":14318469,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319283,"byte_end":14319293,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319849,"byte_end":14319859,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319979,"byte_end":14319989,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320100,"byte_end":14320110,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320207,"byte_end":14320217,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1354,"byte_end":1359,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/lib.rs","byte_start":1424,"byte_end":1427,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1124}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":3311}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":3337}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34178,"byte_end":34182,"line_start":416,"line_end":416,"column_start":18,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34283,"byte_end":34287,"line_start":422,"line_end":422,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":34411,"byte_end":34419,"line_start":428,"line_end":428,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44688,"byte_end":44696,"line_start":694,"line_end":694,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/poll.rs","byte_start":44849,"byte_end":44857,"line_start":701,"line_end":701,"column_start":18,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14169162,"byte_end":14169170,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14177963,"byte_end":14177971,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178066,"byte_end":14178074,"line_start":303,"line_end":303,"column_start":18,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":501},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178151,"byte_end":14178159,"line_start":309,"line_end":309,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178387,"byte_end":14178393,"line_start":320,"line_end":320,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178519,"byte_end":14178525,"line_start":326,"line_end":326,"column_start":16,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14178648,"byte_end":14178654,"line_start":334,"line_end":334,"column_start":19,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14179126,"byte_end":14179132,"line_start":345,"line_end":345,"column_start":22,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/selector/kqueue.rs","byte_start":14179157,"byte_end":14179163,"line_start":346,"line_end":346,"column_start":22,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/sourcefd.rs","byte_start":14193162,"byte_end":14193170,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":524},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/waker.rs","byte_start":14196770,"byte_end":14196775,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/net.rs","byte_start":14202443,"byte_end":14202458,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14217761,"byte_end":14217771,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14218700,"byte_end":14218710,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14220742,"byte_end":14220752,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/uds/socketaddr.rs","byte_start":14221132,"byte_end":14221144,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/mod.rs","byte_start":14165530,"byte_end":14165543,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14234710,"byte_end":14234716,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237300,"byte_end":14237306,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":996},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14237857,"byte_end":14237863,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238753,"byte_end":14238759,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14238970,"byte_end":14238976,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239138,"byte_end":14239144,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239241,"byte_end":14239247,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14239509,"byte_end":14239517,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242103,"byte_end":14242111,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14242661,"byte_end":14242669,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243365,"byte_end":14243373,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243672,"byte_end":14243680,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14243899,"byte_end":14243907,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244073,"byte_end":14244081,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/sys/unix/pipe.rs","byte_start":14244178,"byte_end":14244186,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/waker.rs","byte_start":55322,"byte_end":55327,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":56425,"byte_end":56430,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":63598,"byte_end":63603,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/event.rs","byte_start":64312,"byte_end":64324,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":66687,"byte_end":66693,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":69809,"byte_end":69813,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/events.rs","byte_start":70289,"byte_end":70295,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/event/source.rs","byte_start":74459,"byte_end":74462,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":421},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14246961,"byte_end":14246969,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248269,"byte_end":14248277,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248544,"byte_end":14248552,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14248681,"byte_end":14248689,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14251573,"byte_end":14251581,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14251886,"byte_end":14251896,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/io_source.rs","byte_start":14254194,"byte_end":14254204,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14257508,"byte_end":14257519,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261060,"byte_end":14261071,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261627,"byte_end":14261638,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261771,"byte_end":14261782,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14261906,"byte_end":14261917,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/listener.rs","byte_start":14262027,"byte_end":14262038,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14265273,"byte_end":14265282,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14273778,"byte_end":14273787,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14274399,"byte_end":14274408,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275221,"byte_end":14275230,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1282},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275786,"byte_end":14275795,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14275928,"byte_end":14275937,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276061,"byte_end":14276070,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/tcp/stream.rs","byte_start":14276180,"byte_end":14276189,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14281185,"byte_end":14281194,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14299950,"byte_end":14299959,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300515,"byte_end":14300524,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300657,"byte_end":14300666,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300790,"byte_end":14300799,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/udp.rs","byte_start":14300909,"byte_end":14300918,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14302396,"byte_end":14302408,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14308478,"byte_end":14308490,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1505},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309046,"byte_end":14309058,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309178,"byte_end":14309190,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309301,"byte_end":14309313,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/datagram.rs","byte_start":14309410,"byte_end":14309422,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14310100,"byte_end":14310112,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14311486,"byte_end":14311498,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1601},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312054,"byte_end":14312066,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312186,"byte_end":14312198,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312309,"byte_end":14312321,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/listener.rs","byte_start":14312418,"byte_end":14312430,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6520}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14313128,"byte_end":14313138,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14317836,"byte_end":14317846,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14318459,"byte_end":14318469,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319283,"byte_end":14319293,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1686},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319849,"byte_end":14319859,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14319979,"byte_end":14319989,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6522}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320100,"byte_end":14320110,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6518}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.5/src/net/uds/stream.rs","byte_start":14320207,"byte_end":14320217,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6520}}]}